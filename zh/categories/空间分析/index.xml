<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>空间分析 on Academic</title>
    <link>https://chengjunwang.com/zh/categories/%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90/</link>
    <description>Recent content in 空间分析 on Academic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2016 Cheng-Jun Wang</copyright>
    <lastBuildDate>Sat, 15 Mar 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chengjunwang.com/zh/categories/%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>空间分析初步：使用D3可视化</title>
      <link>https://chengjunwang.com/zh/post/cn/2014-03-15-d3-map/</link>
      <pubDate>Sat, 15 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chengjunwang.com/zh/post/cn/2014-03-15-d3-map/</guid>
      <description>图1 D3 examples
###1. 起源 斯坦福学校可视化团队Jeff Heer教授, 那时候的博士生Mike Bostock,那时候的硕士生 Vadim Ogievetsky在2009年创造了Protovis：一个从数据中生成 SVG 图的工具。2011年, Bostock和的老板Heer、师弟Ogievetsky开发了D3.js (Bostock, Heer &amp;amp; Ogievetsky 2011).
图2 Eyeo 2013 - Mike Bostock
此后，Mike Bostocks致力于D3的继续开发和维护， Mike的网站http://bost.ocks.org/和github（https://github.com/mbostock/d3）成为发展D3力量的重要领地。仅仅三年，作为一个社区（community)，D3的发展已经蔚为大观。
###2. D3是什么？ D3是数据驱动文件（Data-Driven Documents）的缩写。作为一个javascript的库，D3(或D3.js)建构于电子数据（digital data）之上，使用数据创造并控制在网络浏览器里运行的动态交互的图形。
D3必须要嵌入到html网页中，它依赖矢量图像（Scalable Vector Graphics，SVG）、层叠式样式表（Cascading Style Sheets，CSS3)等html的工具来展示图形。
JavaScript函数来选择（select）元素，生成矢量图（SVG），赋予其样式（style），加入变化。 这种函数式的操作使得D3可以很容易的将大的数据（large dataset,而不是big data）从原始数据格式（json, csv， geoJSON, topoJOSON）转为矢量图对象，并且速度非常快。
D3拥有自己的哲学，其中很重要的一条是Thinking with Joins。比如，读者与D3制作的图形交互的时候，会激发数据请求（如选择某一个时间段的数据），新的数据进来（data enter），D3的元素（如svg）就会相应的更新（elements update）。数据与元素的互动是由D3编写的Javascript函数指导的，交互之后之后互动结束，读者就看到一个新的图形了。一个例子是使用D3制作的《悲惨世界》中人物的共现关系（Les Misérables Co-occurrence）。这样做的好处是使得动态的图形展示变得简单。
图3 Thinking with Joins
3. 学习D3 学习使用D3可以从这个Tutorials开始。
4. 使用D3绘制网络 因为网络的可视化相对简单，因而发展也比较成熟。R社区很快开发了R包d3network
5. 使用D3绘制地图 Christchurch 2010 Timeline这个例子正是我想要的。
一些其它的例子。
Let’s Make a Map</description>
    </item>
    
    <item>
      <title>空间分析初步：空间点类型分析</title>
      <link>https://chengjunwang.com/zh/post/cn/2014-03-12-first-step-spatial-analysis-with-r/</link>
      <pubDate>Wed, 12 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chengjunwang.com/zh/post/cn/2014-03-12-first-step-spatial-analysis-with-r/</guid>
      <description>引言 空间分析（spatial analysis）对于扩散研究非常重要，它揭示了传播在空间维度上的分布。令人略感惊奇的是空间分析的研究者越来越多地使用R软件。其中一个原因是R包罗万象，而空间分析仍在发展且神情未定。在这个时候难以判定哪种方法最优。此时，策略当然是博观约取。R因其囊括众多统计方法而成为连接不同分析套路的首选；另外在R当中使用者可以继续开发新的数据分析包。可谓一举两得。　数据读入 我使用的是2013年米兰城12月份推特用户的地理信息数据。该数据来自Big Data Challenge of Telecommunication。使用Python写很简单的script从其服务器api接口读取数据:
# Download milano tweets data using python # chengjun wang @ cmc # 2014 Mar 11 import urllib2 import json f = open(&#39;D:/chengjun/Milan/Social pulse/Milano_sample.csv&#39;, &#39;w&#39;) for offset in range(0,269290/100 +1): print &amp;quot;working on offset: &amp;quot;, offset req_url = &#39;https://api.dandelion.eu/datagem/social-pulse-milano/data/v1/?$limit=100&amp;amp;$offset=&#39;+str(offset)+&#39;&amp;amp;$app_id=d...a&amp;amp;$app_key=2e...7c&#39; jstr = urllib2.urlopen(req_url).read() # json string &amp;quot;&amp;quot;&amp;quot; these are flickr-specific &amp;quot;&amp;quot;&amp;quot; jinfo = json.loads( jstr ) for i in range(0, len(jinfo[&#39;items&#39;])): lan = jinfo[&#39;items&#39;][i][&#39;language&#39;] time = jinfo[&#39;items&#39;][i][&#39;created&#39;] geo = jinfo[&#39;items&#39;][i][&#39;geometry&#39;][&#39;coordinates&#39;] timestamp = jinfo[&#39;items&#39;][i][&#39;timestamp&#39;] municipality_name = jinfo[&#39;items&#39;][i][&#39;municipality&#39;][&#39;name&#39;] municipality_id = jinfo[&#39;items&#39;][i][&#39;municipality&#39;][&#39;acheneID&#39;] entities = jinfo[&#39;items&#39;][i][&#39;entities&#39;] user = jinfo[&#39;items&#39;][i][&#39;user&#39;] print &amp;gt;&amp;gt;f, &amp;quot;%s;%s;%s;%s;%s;%s;&#39;%s&#39;;%s&amp;quot; % (lan, time, geo, timestamp, municipality_name, municipality_id, entities, user) f.</description>
    </item>
    
  </channel>
</rss>