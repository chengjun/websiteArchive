<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>可视化 on Academic</title>
    <link>https://chengjunwang.com/zh/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/</link>
    <description>Recent content in 可视化 on Academic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2016 Cheng-Jun Wang</copyright>
    <lastBuildDate>Wed, 27 Aug 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chengjunwang.com/zh/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用d3network做网络可视化</title>
      <link>https://chengjunwang.com/zh/post/cn/2014-08-27-d3network/</link>
      <pubDate>Wed, 27 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chengjunwang.com/zh/post/cn/2014-08-27-d3network/</guid>
      <description>在之前的一个博客中，我介绍了使用R进行社区划分并可视化的方法。这里使用相同的数据，介绍如何使用d3network实现网络可视化的方法。
首先，安装d3network
devtools::install_github(&amp;quot;d3Network&amp;quot;, &amp;quot;christophergandrud&amp;quot;) require(d3Network)  之后可以使用简单的可视化方法：
d3SimpleNetwork(data[,1:2], file = &amp;quot;chinese_university100.html&amp;quot;, width = 1024, height = 763, fontsize = 12)  我想要展现社区划分的结果：
#链接数据 links = data names(links) = c(&amp;quot;source&amp;quot;, &amp;quot;target&amp;quot;, &amp;quot;value&amp;quot;) #节点列表 fc = fastgreedy.community(g); sizes(fc) mfc = membership(fc) nodes = data.frame(name = names(mfc), group = mfc) #对应链接数据和节点数据 ids = 0:(nrow(nodes)-1) # notice: start with zero! links[,1] = ids[match(links[,1], nodes$name )] links[,2] = ids[match(links[,2], nodes$name )] links = links[with(links, order(source)), ] # sort by source #处理边的权重大小 links$value = log(links$value)  之后就可以使实现可视化结果啦：</description>
    </item>
    
    <item>
      <title>中国高校间的友谊网络：大学排名、地理位置和演化规律</title>
      <link>https://chengjunwang.com/zh/post/cn/2014-07-21-chinese-university-friendship-network/</link>
      <pubDate>Mon, 21 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chengjunwang.com/zh/post/cn/2014-07-21-chinese-university-friendship-network/</guid>
      <description>许小可老师和我决定使用可视化的方法分析一下中国高校之间的友谊关系网络。我们是想通过这个图从一个侧面说明各个大学在社交网络上的影响力和关系：所以节点大小表示每个大学在该网络中的友谊关系数量，连边宽度表示节点之间的连接关系，节点颜色的不同可以表示节点的影响力大小（介度中心性指标）。
###数据清洗 现有数据有学校信息。我可以通过构建字典的方式来将user_id和学校信息（以最新的学校信息为主）剥离出来。使用这个字典可以计算学校人数的分布并挑选前一百的学校。然后根据user_id来match社交网络数据和学校数据，构建：university1&amp;mdash;university2&amp;mdash;date的数据形式。如果该行数据中的学校都在top100的名单中，则保留，否则不保留，这样可以构建所需要的学校和学校的随时间变化的网络，并采用考虑连边权重的贪婪算法来划分网络社团。
###数据分析
数据清洗之后，使用R软件进行数据分析，使用igraph包进行数据的可视化。代码如下：
library(igraph) setwd(&amp;quot;F:/xiaonei/&amp;quot;) ################ # all data ################ data = read.table(&amp;quot;./friends_university_top100_by_all.txt&amp;quot;, header = FALSE, sep = &#39;\t&#39;, stringsAsFactors = FALSE) data = data[which(data[,3] &amp;gt;= mean(data[,3])*1.2), ] data = data[which(data[,1] != data[,2]),] g =graph.data.frame(data[,1:2],directed=FALSE ) E(g)$weight = data[,3] E(g)$color = &amp;quot;lightgrey&amp;quot; # layout set.seed(34) ## to make this reproducable l=layout.fruchterman.reingold(g) # size nodeSize = graph.strength(g) V(g)$size = (nodeSize - min(nodeSize))/(max(nodeSize) - min(nodeSize))*20 centrality = betweenness(g) # colors colors = heat.</description>
    </item>
    
  </channel>
</rss>