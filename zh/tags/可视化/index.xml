<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>可视化 on </title>
    <link>https://chengjun.github.io/zh/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/index.xml</link>
    <description>Recent content in 可视化 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2016 Cheng-Jun Wang</copyright>
    <atom:link href="/zh/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>再次尝试shinyApp</title>
      <link>https://chengjun.github.io/zh/post/cn/2015-01-11-shinyapp/</link>
      <pubDate>Sun, 11 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://chengjun.github.io/zh/post/cn/2015-01-11-shinyapp/</guid>
      <description>&lt;p&gt;昨天收到了shinyapp的一封邮件，想起之前自己做的关于网络扩散的东西，就想把它转化为app的形式。最直接的办法还是看tutorial，比如（&lt;a href=&#34;http://shiny.rstudio.com/tutorial）。&#34; target=&#34;_blank&#34;&gt;http://shiny.rstudio.com/tutorial）。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;现学现卖，于是我马上做了一个使用igraph绘制BA网络的小应用：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://chengjun.shinyapps.io/testApp/&#34; target=&#34;_blank&#34;&gt;https://chengjun.shinyapps.io/testApp/&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&#39;https://chengjun.shinyapps.io/testApp/&#39; scrolling=&#34;no&#34; width=&#34;600&#34; height = &#34;800&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;##通过rstudio学习shinyApp制作
其实R的王牌编辑器Rstudio已经和shiny完美的结合，完全可以通过rstudio学习shinyApp制作。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  system.file(&amp;quot;examples&amp;quot;, package=&amp;quot;shiny&amp;quot;)

  runExample(&amp;quot;01_hello&amp;quot;) # a histogram
  runExample(&amp;quot;02_text&amp;quot;) # tables and data frames
  runExample(&amp;quot;03_reactivity&amp;quot;) # a reactive expression
  runExample(&amp;quot;04_mpg&amp;quot;) # global variables
  runExample(&amp;quot;05_sliders&amp;quot;) # slider bars
  runExample(&amp;quot;06_tabsets&amp;quot;) # tabbed panels
  runExample(&amp;quot;07_widgets&amp;quot;) # help text and submit buttons
  runExample(&amp;quot;08_html&amp;quot;) # shiny app built from HTML
  runExample(&amp;quot;09_upload&amp;quot;) # file upload wizard
  runExample(&amp;quot;10_download&amp;quot;) # file download wizard
  runExample(&amp;quot;11_timer&amp;quot;) # an automated timer
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Echarts使用简介</title>
      <link>https://chengjun.github.io/zh/post/cn/2015-01-10-myecharts/</link>
      <pubDate>Sat, 10 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://chengjun.github.io/zh/post/cn/2015-01-10-myecharts/</guid>
      <description>&lt;p&gt;昨天听谈和讲解了echarts的使用，他的讲解非常直接简单，就是直接修改echarts的实例。之后，我发现林峰将echarts的实例的html代码写得非常复杂，但其实单独调用一个js的时候，却非常简单。具体做法如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;准备工作：建立一个js子文件夹，将esl，echarts，pie，bar，map等各种js放入其中。在js文件夹外新建一个空的html文件。&lt;/li&gt;
&lt;li&gt;首先，调用esl.js，它提供了echarts图片的载体。&lt;/li&gt;
&lt;li&gt;其次，使用require方法调用echarts.js和具体使用的类型图的js（比如map.js）。&lt;/li&gt;
&lt;li&gt;再次，输入需要输入的数据。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最后，封装。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;!DCOTYPE html&amp;gt;
    &amp;lt;html&amp;gt;
        &amp;lt;head&amp;gt;
            &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
            &amp;lt;title&amp;gt;echarts testing page&amp;lt;/title&amp;gt;
            &amp;lt;script src=&amp;quot;./js/esl.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
            &amp;lt;script src=&amp;quot;./js/echarts.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;/head&amp;gt;
        &amp;lt;body&amp;gt;
            &amp;lt;div id=&amp;quot;main&amp;quot; style=&amp;quot;height:400px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
                require.config({
                    paths:{
                        &amp;quot;echarts&amp;quot;:&amp;quot;js/echarts&amp;quot;,
                        &amp;quot;echarts/chart/map&amp;quot;:&amp;quot;js/map&amp;quot;
                    }
                });

                //using
                require(
                    [
                        &amp;quot;echarts&amp;quot;,
                        &amp;quot;echarts/chart/map&amp;quot;
                    ],
                    function(ec){
                        var myChart=ec.init(document.getElementById(&amp;quot;main&amp;quot;));  
                        &amp;lt;!--Input your code below--&amp;gt;                    

                        &amp;lt;!--Input your code above--&amp;gt;                    
                //loading data
                        myChart.setOption(option);
                    }
                );
            &amp;lt;/script&amp;gt;
        &amp;lt;/body&amp;gt;
    &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##弦图
&lt;a href=&#34;http://chengjun.github.io/myecharts/chord.html&#34; target=&#34;_blank&#34;&gt;http://chengjun.github.io/myecharts/chord.html&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&#39;http://chengjun.github.io/myecharts/chord.html&#39; scrolling=&#34;no&#34; width=&#34;600&#34; height = &#34;400&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;##柱状图
&lt;a href=&#34;http://chengjun.github.io/myecharts/bar.html&#34; target=&#34;_blank&#34;&gt;http://chengjun.github.io/myecharts/bar.html&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&#39;http://chengjun.github.io/myecharts/bar.html&#39; scrolling=&#34;no&#34; width=&#34;600&#34; height = &#34;400&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;##饼图
&lt;a href=&#34;http://chengjun.github.io/myecharts/pie1.html&#34; target=&#34;_blank&#34;&gt;http://chengjun.github.io/myecharts/pie1.html&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&#39;http://chengjun.github.io/myecharts/pie1.html&#39; scrolling=&#34;no&#34; width=&#34;600&#34; height = &#34;400&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;##线图
&lt;a href=&#34;http://chengjun.github.io/myecharts/line1.html&#34; target=&#34;_blank&#34;&gt;http://chengjun.github.io/myecharts/line1.html&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&#39;http://chengjun.github.io/myecharts/line1.html&#39; scrolling=&#34;no&#34; width=&#34;600&#34; height = &#34;400&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;##地图
&lt;a href=&#34;http://chengjun.github.io/myecharts/map9.html&#34; target=&#34;_blank&#34;&gt;http://chengjun.github.io/myecharts/map9.html&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&#39;http://chengjun.github.io/myecharts/map9.html&#39; scrolling=&#34;no&#34; width=&#34;600&#34; height = &#34;400&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;##力图&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://chengjun.github.io/myecharts/force2&#34; target=&#34;_blank&#34;&gt;http://chengjun.github.io/myecharts/force2&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&#39;http://chengjun.github.io/myecharts/force2.html&#39; scrolling=&#34;no&#34; width=&#34;600&#34; height = &#34;400&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;##后记
发现chrome无法加载，再加入了以下代码后就可以使用了。可惜用了整整一个上午才更正这个问题。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        &amp;lt;script src=&amp;quot;./js/echarts.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>空间分析初步：使用D3可视化</title>
      <link>https://chengjun.github.io/zh/post/cn/2014-03-15-d3-map/</link>
      <pubDate>Sat, 15 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chengjun.github.io/zh/post/cn/2014-03-15-d3-map/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://bgc-dml.wdfiles.com/local--files/d3/D3.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图1 &lt;a href=&#34;http://d3js.org/&#34; target=&#34;_blank&#34;&gt;D3 examples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;###1. 起源
斯坦福学校可视化团队Jeff Heer教授, 那时候的博士生Mike Bostock,那时候的硕士生 Vadim Ogievetsky在2009年创造了Protovis：一个从数据中生成 SVG 图的工具。2011年, Bostock和的老板Heer、师弟Ogievetsky开发了D3.js (&lt;a href=&#34;http://vis.stanford.edu/files/2011-D3-InfoVis.pdf&#34; target=&#34;_blank&#34;&gt;Bostock, Heer &amp;amp; Ogievetsky 2011&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://b.vimeocdn.com/ts/442/674/442674389_640.jpg&#34; alt=&#34;Mike Bostocks&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图2 &lt;a href=&#34;http://vimeo.com/69448223&#34; target=&#34;_blank&#34;&gt;Eyeo 2013 - Mike Bostock&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;此后，Mike Bostocks致力于D3的继续开发和维护， Mike的网站&lt;a href=&#34;http://bost.ocks.org/&#34; target=&#34;_blank&#34;&gt;http://bost.ocks.org/&lt;/a&gt;和github（&lt;a href=&#34;https://github.com/mbostock/d3&#34; target=&#34;_blank&#34;&gt;https://github.com/mbostock/d3&lt;/a&gt;）成为发展D3力量的重要领地。仅仅三年，作为一个社区（community)，D3的发展已经蔚为大观。&lt;/p&gt;

&lt;p&gt;###2. D3是什么？
D3是数据驱动文件（Data-Driven Documents）的缩写。作为一个javascript的库，D3(或D3.js)建构于电子数据（digital data）之上，使用数据创造并控制在网络浏览器里运行的动态交互的图形。&lt;/p&gt;

&lt;p&gt;D3必须要嵌入到html网页中，它依赖矢量图像（Scalable Vector Graphics，SVG）、层叠式样式表（Cascading Style Sheets，CSS3)等html的工具来展示图形。&lt;/p&gt;

&lt;p&gt;JavaScript函数来选择（&lt;strong&gt;select&lt;/strong&gt;）元素，生成矢量图（SVG），赋予其样式（style），加入变化。 这种函数式的操作使得D3可以很容易的将大的数据（large dataset,而不是big data）从原始数据格式（json, csv， geoJSON, topoJOSON）转为矢量图对象，并且速度非常快。&lt;/p&gt;

&lt;p&gt;D3拥有自己的&lt;strong&gt;哲学&lt;/strong&gt;，其中很重要的一条是&lt;a href=&#34;http://bost.ocks.org/mike/join/&#34; target=&#34;_blank&#34;&gt;Thinking with Joins&lt;/a&gt;。比如，读者与D3制作的图形交互的时候，会激发数据请求（如选择某一个时间段的数据），新的数据进来（data enter），D3的元素（如svg）就会相应的更新（elements update）。数据与元素的互动是由D3编写的Javascript函数指导的，交互之后之后互动结束，读者就看到一个新的图形了。一个例子是使用D3制作的《悲惨世界》中人物的共现关系（&lt;a href=&#34;http://bost.ocks.org/mike/miserables/&#34; target=&#34;_blank&#34;&gt;Les Misérables Co-occurrence&lt;/a&gt;）。这样做的好处是使得动态的图形展示变得简单。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://pixelmonkey.org/pub/dataviz-elements/notes/_images/data_join.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图3 Thinking with Joins&lt;/p&gt;

&lt;h3 id=&#34;3-学习d3&#34;&gt;3. 学习D3&lt;/h3&gt;

&lt;p&gt;学习使用D3可以从这个&lt;a href=&#34;https://github.com/mbostock/d3/wiki/Tutorials&#34; target=&#34;_blank&#34;&gt;Tutorials&lt;/a&gt;开始。&lt;/p&gt;

&lt;h3 id=&#34;4-使用d3绘制网络&#34;&gt;4. 使用D3绘制网络&lt;/h3&gt;

&lt;p&gt;因为网络的可视化相对简单，因而发展也比较成熟。R社区很快开发了R包d3network&lt;/p&gt;

&lt;h3 id=&#34;5-使用d3绘制地图&#34;&gt;5. 使用D3绘制地图&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://bl.ocks.org/tnightingale/4718717&#34; target=&#34;_blank&#34;&gt;Christchurch 2010 Timeline&lt;/a&gt;这个例子正是我想要的。&lt;/p&gt;

&lt;p&gt;一些其它的例子。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://bost.ocks.org/mike/map/&#34; target=&#34;_blank&#34;&gt;Let’s Make a Map&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.d3noob.org/2013/03/a-simple-d3js-map-explained.html&#34; target=&#34;_blank&#34;&gt;A simple d3js map explained&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.meetup.com/NYC-Open-Data/events/137244272/&#34; target=&#34;_blank&#34;&gt;D3.js workshop II: make beautiful maps &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;embed src=&#34;http://www.xiami.com/widget/2901500_3570908/singlePlayer.swf&#34; type=&#34;application/x-shockwave-flash&#34; width=&#34;257&#34; height=&#34;33&#34; wmode=&#34;transparent&#34;&gt;&lt;/p&gt;

&lt;p&gt;###参考文献&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Bostock, Michael; Ogievetsky, Vadim; Heer, Jeffrey (October 2011), D3: Data-Driven Documents, IEEE Transactions on Visualization and Computer Graphics, IEEE Press&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>
