<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>信息扩散 on </title>
    <link>https://chengjun.github.io/en/tags/%E4%BF%A1%E6%81%AF%E6%89%A9%E6%95%A3/index.xml</link>
    <description>Recent content in 信息扩散 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Cheng-Jun Wang</copyright>
    <atom:link href="/en/tags/%E4%BF%A1%E6%81%AF%E6%89%A9%E6%95%A3/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>“众说纷纭”抑或“一言九鼎”？——以卡扎菲官邸攻陷事件在新浪微博上的信息扩散为例</title>
      <link>https://chengjun.github.io/en/post/cn/2011-08-22-gaddafi-diffusion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chengjun.github.io/en/post/cn/2011-08-22-gaddafi-diffusion/</guid>
      <description>&lt;p&gt;本文载于《传媒透视》&lt;/p&gt;

&lt;p&gt;作者：王成军、张昕之 （作者皆为 香港城市大学 媒体与传播系 博士候选人）&lt;/p&gt;

&lt;p&gt;2011年8月22日，利比亚反对派军队攻占卡扎菲官邸。初传卡扎菲被击毙，后又有消息称，卡扎菲实已经密道逃亡，截止本文完成之时（8月27日），仍无其最新下落。&lt;/p&gt;

&lt;p&gt;如今微博已成为普通受众获知新闻、分享内容、沟通友人的重要渠道。利比亚内战一事在微博上迅速成为热门话题。然而微博用户众多，每个人的职业、地域、社会经济地位、社会网络、认知水平乃至动机，均有参差。尽管每个人用户都看似卷入了对重大事件的讨论，但是其发言的“质量”（如逻辑、可信度等）值得商榷。同时，微博有“V认证”以标识媒体工作者、社会名流、公共知识分子等人。这些人或因粉丝众多、或因观点犀利、或因独家爆料，其发言常被众多用户转发或评论，比起普通用户的“众说纷纭”，可谓“一言九鼎”。那么，事件发生后，在一个特定的微博用户群中，究竟是每个人平等参与了新闻的讨论和扩散抑或仅有几个活跃用户推进参与讨论的过程？新闻的信源与信息发布者之间、活跃用户与其粉丝之间、粉丝与粉丝之间——的互动关系在某个特定时间段表现为何种形式？&lt;/p&gt;

&lt;p&gt;为回答以上问题，作为一个探索研究，本文采用新浪微博API，抓取短短4分钟内（2011/8/22 15:06—15:10）所有新浪微博上对于卡扎菲官邸攻陷事件的信息发布、转发、评论，共计738条微博。四分钟的信息流，处于信息扩散阶段的一个短暂的瞬间，因而无法窥见整体层面的信息扩散规律。但因所采集的数据为随着时间有规律增长的宏大信息流的片段，同样可能起到窥一斑而见全豹的目的，其独特意义在于：海量数据流给信息处理和网络抽样带来巨大挑战，面对庞大的关系数据，传统统计方法不再适用；了解瞬间的数据流的特点是理解海量信息流的基础。本文从“瞬间数据流”的整体（而非样本）出发，探究其内在特点，可为网络舆论研究提供新视角。抛开技术的细枝末节，我们有四个重要发现:&lt;/p&gt;

&lt;p&gt;##发现一：自发性信息推荐群体的出现：从“自说自话”到“信息推荐”
738条微博信息中，转发的内容达262条，占三成，剩余约三分之二为原创新内容（476条）。主动的受众积极地转载来自其他渠道的信息。例如，其中有152条微博带有网络链接，30条提及电视台，26条提及路透社，23条提及齐鲁晚报。这表明有一个活跃的、自发性的“信息推荐群体”存在着，他们看似“自言自语”的原创微博发挥着信息推荐的作用。&lt;/p&gt;

&lt;p&gt;##发现二： “一言九鼎”的“舆论领袖”
在短短4分钟内，就有44条帖子被转发262次，平均每条帖子被转发6次。最多的一条帖子——华尔街日报关于卡扎菲倒、油价可能上涨的消息,在四分钟内被转发了43次；该消息发布于本研究抓取数据一个小时前的14:18， 一个小时中累计被转发290次，被评论105次。四分钟内转发数量超过9条的微博客用户，主要为媒体、媒体评论人，几乎全是加V的新浪认证用户（只有 “愤青3D”例外），并具有超过百万的粉丝数量。转发情况如图1。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://farm4.staticflickr.com/3679/12744680075_2d9d4fbbcc_o.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图 1 微博用户及其微博被转发次数（Top 10）&lt;/p&gt;

&lt;p&gt;##发现三：活跃的信息转发者：多次转发同一条信息的个体
本文分析了信息转发的网络关系，该有向网络由99个节点构成，拥有262条边，然而出乎意料的是这仅仅构成了一个稀疏的信息扩散网络：该网络的网络密度仅为0.027。网络密度衡量的是网络中真实存在的边与可能存在的边的数量的比值，本转发网络密度(0.027)低于期望值（0.054），说明有些节点之间存在多条链接，即某一个特定人物发布的某一条重要的信息，被“同一个转发者”多次转发。比如新闻评论人李承鹏所发的一条微博在4分钟内被转发15次。这15次并非被15个人“一人转发一次”，而是其中被一个ID为“古火拉兹-五毛”的人转发高达9次之上，剩下的几次由另两个ID（“慧-丽” 和“跪下去求婚站起来演说”）所转发。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://farm6.staticflickr.com/5515/12745135864_4561dbd471_o.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图 2  微博转发网络（箭头代表信息流动方向）&lt;/p&gt;

&lt;p&gt;##发现四: 原创型微博和被转发微博的语义网络：经济的还是政治的？
上文中我们提到了两类微博：一是“推荐者”们原创的微博，二是意见领袖被转发的微博。为粗略地比较两类微博内容的区别，本文对这四分钟内抽取的微博内容，通过提取高频词，构建语义网络进行分析。发现：两类微博除了都关注新闻事件本身的基本经过、“5W”之外，“原创”微博关注政治及社会自由方面（图3）， 而社会名人被转发的微博主要针对新闻事件对经济的影响（图4）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://farm4.staticflickr.com/3830/12744833063_a14400925f_o.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图 3原创型微博的语义网络&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://farm8.staticflickr.com/7423/12744697025_08edbc3340_o.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图 4 被转发微博的语义网络&lt;/p&gt;

&lt;p&gt;##总结
本例中，微博资讯的传播和扩散主要始于少数的意见领袖，跨国大型新闻机构亦是主要消息来源。微博时代，传统媒体如果善用网络平台仍可成为主要的信息来源。作为信息聚合作用的草根媒体开始出现，并扮演对传统媒体之信息进行过滤的把关人角色。此外，一些知名的草根ID通过自身的独特定位和宣传包装技巧，同样开始广泛的发挥舆论领袖的作用。值得注意的是，公共讨论和自言自语相互结合的原创类型微博占到了信息流的主体。“自媒体”从“自广播”开始起步，普通的微博使用者开始运用微博转载新闻、表明态度，使得微博成为孕育公共讨论的新机制。这种底层的广泛的信息转载虽然在四分钟内未获得转发，但在其各自子群中，都扮演着信息推荐者的角色。&lt;/p&gt;

&lt;p&gt;最后，作为一个探索性的研究，后续研究仍需要大量的文献梳理和技术支持。未来可以考量更为漫长的时间段内信息的扩散过程。另外，对制度性的不同话语主体之间（如政府、媒介、国际机构等）的互动，不同类型事件、乃至国内（敏感新闻、突发新闻更甚）新闻的扩散机制——凡此种种，均可成为后续研究之鉴。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用R模拟网络扩散</title>
      <link>https://chengjun.github.io/en/post/cn/2014-02-28-simulate-network-diffusion-with-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chengjun.github.io/en/post/cn/2014-02-28-simulate-network-diffusion-with-r/</guid>
      <description>&lt;p&gt;与普通的扩散研究不同，网络扩散开始考虑网络结构对于扩散过程的影响。&lt;/p&gt;

&lt;p&gt;这里介绍一个使用R模拟网络扩散的例子。基本的算法非常简单：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;生成一个网络:g(V, E)。&lt;/li&gt;
&lt;li&gt;随机选择一个或几个节点作为种子（seeds）。&lt;/li&gt;
&lt;li&gt;每个感染者以概率p（可视作该节点的传染能力,通常表示为$$\beta$$）影响与其相连的节点。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其实这是一个最简单的SI模型在网络中的实现。S表示可感染（susceptible）, I表示被感染（infected）。SI模型描述了个体的状态从S到I之间的转变。因为形式简单，SI模型是可以求出其解析解的。考虑一个封闭的群体，没有出生、死亡和迁移。并假设个体是均匀混合的（homogeneous mixing),也就是要求个体的地理分布均匀，且被感染的概率也相同(T. G. Lewis, 2011)。那么β表示传染率（transmission rate)。SI模型可以表达为：&lt;/p&gt;

&lt;p&gt;$$\frac{dS}{dt}=-\beta SI$$&lt;/p&gt;

&lt;p&gt;$$\frac{dI}{dt}=\beta SI$$&lt;/p&gt;

&lt;p&gt;且满足 I + S = 1，那么以上方程$$\frac{dI}{dt}=\beta SI$$可以表达为：&lt;/p&gt;

&lt;p&gt;$$\frac{dI}{dt}=\beta I(1-I)$$&lt;/p&gt;

&lt;p&gt;解这个微分方程，我们可以得到累计增长曲线的表达式。有趣的是，这是一个logistic增长，具有明显的S型曲线（S-shaped curve）特征。该模型在初期跨越临界点之后增长较快，后期则变得缓慢。 因而可以用来描述和拟合创新扩散过程（diffusion of innovations）。&lt;/p&gt;

&lt;p&gt;当然，对疾病传播而言，SI模型是非常初级的（naive），主要因为受感染的个体以一定的概率恢复健康，或者继续进入可以被感染状态(S，据此扩展为SIS模型)或者转为免疫状态（R,据此扩展为SIR模型）。 免疫表示为R，用$$\gamma$$代表免疫概率（removal or recovery rate)。对于信息扩散而言，这种考虑暂时是不需要的。&lt;/p&gt;

&lt;p&gt;第一步，生成网络。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require(igraph)
# generate a social graph
size = 50

# 规则网
g = graph.tree(size, children = 2); plot(g)
g = graph.star(size); plot(g)
g = graph.full(size); plot(g)
g = graph.ring(size); plot(g)
g = connect.neighborhood(graph.ring(size), 2); plot(g) # 最近邻耦合网络

# 随机网络
g = erdos.renyi.game(size, 0.1)

# 小世界网络
g = rewire.edges(erdos.renyi.game(size, 0.1), prob = 0.8 )
# 无标度网络
g = barabasi.game(size) ; plot(g)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第二步，随机选取一个或n个种子。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#  initiate the diffusers
seeds_num = 1
set.seed(2014); diffusers = sample(V(g),seeds_num) ; diffusers
infected =list()
infected[[1]]= diffusers
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第三步，在这个简单的例子中，每个节点的传染能力是0.5，即与其相连的节点以0.5的概率被其感染。在R中的实现是通过抛硬币的方式来实现的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# for example, set percolation probability = 0.5
coins = c(0,1)
n = length(coins)
sample(coins, 1, replace=TRUE, prob=rep(1/n, n))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;显然，这很容易扩展到更一般的情况，比如节点的平均感染能力是0.128，那么可以这么写：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p = 0.128
coins = c(rep(1, p*1000), rep(0,(1-p)*1000))
n = length(coins)
sample(coins, 1, replace=TRUE, prob=rep(1/n, n))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然最重要的一步是要能按照“时间”更新网络节点被感染的信息。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# function for updating the diffusers
update_diffusers = function(diffusers){
  nearest_neighbors = neighborhood(g, 1, diffusers)
  nearest_neighbors = data.frame(table(unlist(nearest_neighbors)))
  nearest_neighbors = subset(nearest_neighbors, !(nearest_neighbors[,1]%in%diffusers))
  # toss the coins
  toss = function(freq) {
    tossing = NULL
    for (i in 1:freq ) tossing[i] = sample(coins, 1, replace=TRUE, prob=rep(1/n, times=n))
    tossing = sum(tossing)
    return (tossing)
  }
  keep = unlist(lapply(nearest_neighbors[,2], toss))
  new_infected = as.numeric(as.character(nearest_neighbors[,1][keep &amp;gt;= 1]))
  diffusers = unique(c(diffusers, new_infected))
  return(diffusers)
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完成了以上三步。准备好了吗，现在开始开启扩散过程！&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## Start the contagion!
i = 1
while(length(infected[[i]]) &amp;lt; size){ 
  infected[[i+1]] = sort(update_diffusers(infected[[i]]))
  cat(length(infected[[i+1]]), &amp;quot;\n&amp;quot;)
  i = i + 1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;先看看S曲线吧：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# &amp;quot;growth_curve&amp;quot;
num_cum = unlist(lapply(1:i, function(x) length(infected［x］) ))
p_cum = num_cum/max(num_cum)
time = 1:i

png(file = &amp;quot;./temporal_growth_curve.png&amp;quot;, 
    width=5, height=5, 
    units=&amp;quot;in&amp;quot;, res=300)
plot(p_cum~time, type = &amp;quot;b&amp;quot;)
dev.off()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://farm8.staticflickr.com/7299/12845959103_e19cd9cd99_n.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;为了可视化这个扩散的过程，我们用红色来标记被感染者。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# generate a palette
E(g)$color = &amp;quot;blueviolet&amp;quot;
V(g)$color = &amp;quot;white&amp;quot;
set.seed(2014); layout.old = layout.fruchterman.reingold(g) 
V(g)$color[V(g)%in%diffusers] = &amp;quot;red&amp;quot;
plot(g, layout =layout.old)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用谢益辉开发的animation的R包可视化。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(animation)

saveGIF({
  ani.options(interval = 0.5, convert = shQuote(&amp;quot;C:/Program Files/ImageMagick-6.8.8-Q16/convert.exe&amp;quot;))
  # start the plot
  m = 1
  while(m &amp;lt;= length(infected)){
    V(g)$color = &amp;quot;white&amp;quot;
    V(g)$color[V(g)%in%infected[[m]]] = &amp;quot;red&amp;quot;
    plot(g, layout =layout.old)
    m = m + 1}
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://farm4.staticflickr.com/3806/12826172695_368a6f50a2_o.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://farm3.staticflickr.com/2848/12826237753_d8c97b1019_o.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://farm4.staticflickr.com/3729/12826584654_c84452f397_o.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://farm3.staticflickr.com/2851/12826173505_34649f488d_o.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://farm8.staticflickr.com/7391/12826173255_574e471023_o.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://farm4.staticflickr.com/3675/12826584484_7c6f35380c_o.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://farm8.staticflickr.com/7432/12826173045_ef3548ec04_o.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;如同在Netlogo里一样，我们可以把网络扩散与增长曲线同时展示出来：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;saveGIF({
  ani.options(interval = 0.5, convert = shQuote(&amp;quot;C:/Program Files/ImageMagick-6.8.8-Q16/convert.exe&amp;quot;))
  # start the plot
  m = 1
  while(m &amp;lt;= length(infected)){
    # start the plot
    layout(matrix(c(1, 2, 1, 3), 2,2, byrow = TRUE), widths=c(3,1), heights=c(1, 1))
    V(g)$color = &amp;quot;white&amp;quot;
    V(g)$color[V(g)%in%infected[[m]]] = &amp;quot;red&amp;quot;
    num_cum = unlist(lapply(1:m, function(x) length(infected[[x]]) ))
    p_cum = num_cum/size
    p = diff(c(0, p_cum))
    time = 1:m
    plot(g, layout =layout.old, edge.arrow.size=0.2)
    title(paste(&amp;quot;Scale-free Network \n Day&amp;quot;, m))
    plot(p_cum~time, type = &amp;quot;b&amp;quot;, ylab = &amp;quot;CDF&amp;quot;, xlab = &amp;quot;Time&amp;quot;,
         xlim = c(0,i), ylim =c(0,1))
    plot(p~time, type = &amp;quot;h&amp;quot;, ylab = &amp;quot;PDF&amp;quot;, xlab = &amp;quot;Time&amp;quot;,
         xlim = c(0,i), ylim =c(0,1), frame.plot = FALSE)
    m = m + 1}
}, ani.width = 800, ani.height = 500)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://farm4.staticflickr.com/3672/12848749413_7f9da8b8c7_o.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>第6章 信息扩散：像病毒一样传播开来</title>
      <link>https://chengjun.github.io/en/post/cn/2012-07-01-snabook-chapter6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chengjun.github.io/en/post/cn/2012-07-01-snabook-chapter6/</guid>
      <description>&lt;p&gt;这一章或许是你挑选这本书的首要原因。很多人好奇事物（视频、网站、新闻等）如何像病毒一样在网络上传播开来——迅速扩散并成为文化中的一部分（同时在这个过程中，使得创造它们的作者富有）。我们应该预先告诉你我们并没有现成的答案。实际上没有任何人知道答案，并且这个过程中有一些运气的成分在——但在本章中，我们将要尝试使你更加理解驱动扩散的原因以及你的决策如何驱动购买行为。&lt;/p&gt;

&lt;p&gt;##6.1病毒视频剖析
假设给你的猫拍摄了一段非常可爱的视频，上传到YouTube网站上并通过推特进行宣传。你是否正走在通往财富的道路上？答案是，不一定。&lt;/p&gt;

&lt;p&gt;这主要取决于谁看到了这个视频，以及他们在看完之后做了什么。首先，唯一看到视频的是位于你的自我中心网（ego network）中的成员——比如你的朋友。这样的观看总数的增长是非常缓慢的；观看总次数随着时间是线性增长的，这意味着每个时间段的观看次数接近一个固定常数。在这种情况下， 我们可以将观看次数描述为一个泊松过程，其中的每个观看你的视频的浏览行为彼此之间是独立的。最后，你的视频所获得的总浏览数量与你的粉丝的数量（你的程度中心性）存在数学上的关联。&lt;/p&gt;

&lt;p&gt;但如果发生了一些其它的事情并且你的朋友们转发了这个视频给他们的朋友（等等，使得越来越多的人知晓这个视频），你的猫的视频将马上成为YouTube上面最流行的视频，并且好莱坞的制片人前来你家拜访。或者这一些都没有发生。&lt;/p&gt;

&lt;p&gt;有一个奇怪的事情在这个过程中间的某处发生了。你的一个朋友说“你看过这个视频吗？”，另一个朋友回答“是的，我已经看过了”，这强化了这个视频是一个“觅母”（meme） ——一个新的、独立的文化人造产品的观念。突然之间，让别人接触这个觅母就成一个人的第二天性或者甚至是一种必须的行为。&lt;/p&gt;

&lt;p&gt;从一个无足轻重的事物（但是可爱或有趣）变成一个必须分享的事物的质变过程是增长曲线的一个剧烈的转折，也被称为“临界质量”（critical mass）。如果在一定量的时间里，觅母未能在一定的时间范围里到达临界质量，它的采纳率开始下降并最终消亡。&lt;/p&gt;

&lt;p&gt;但是如果到达了临界质量，它将指数增长直到达到饱和点——也就是几乎每个可能采纳这个觅母的人都已经采纳。从这一点开始，觅母将会开始走下坡路。&lt;/p&gt;

&lt;p&gt;需要注意的是临界质量和饱和的概念适用于每个网络和社群——一个觅母在一个社群到达饱和点而在另一个社群里无人知晓是可能的。但是，因为社群是相互连接的，所以觅母通过跨界者从一个社群传入另一个社群并确立一个新的临界质量和更高的饱和点是可能的。&lt;/p&gt;

&lt;p&gt;###脸书做对了什么
在脸书（Facebook）出现之前，存在着其它社会网络。我们中的一切人或许还有聚友网（MySpace）的账号。一些人还记得Friendster。在Friendster之前，在所有其它SNS之前还有一个叫SixDegrees的网站。SixDegrees创立于1997年，它承诺将连接人们和他们的朋友、以及他们的朋友之间、最好的律师、医生、水暖工等。这样做，它将提供帮助人们通过社会网络完成任务的有用的功能。&lt;/p&gt;

&lt;p&gt;SixDegrees早于时代5年时间，并且尽管采用了全国范围内的广告宣传、良好的设计（对1997年而言）、在博客（令人尊重的Slashdot网站和波音波音（BoingBoing）网站都曾重点推介过它）和杂志（连线杂志）中良好的形象，它从未迎来增长的临界点。&lt;/p&gt;

&lt;p&gt;哪里出错了呢？答案非常简单——Sixdegrees未能到达它的临界质量。网站本身是全国性的，他们却实际上试图建立一个蔓延全国的地方化的市场，结果未能完成这个任务——实际上几乎不可能在这个网站上找到一个水暖工，部分原因是那时很少有水暖工使用互联网（或者觉得建立一个网络SNS账号很麻烦），部分原因是SNS的使用强度非常低。&lt;/p&gt;

&lt;p&gt;当脸书2003年建立的时候（仍使用最初的名字“Facemash”），它是一个哈佛本科生组成的小而紧密的网络社群。创立于一个较小的地区使得他们可以快速到达增长的临界质量。实际上，在它上线约四个小时内，就已经吸引了450个访问者，或者大约6%全部的本科生。记住6%这个数字，它非常重要。&lt;/p&gt;

&lt;p&gt;在哈佛内部，早期的脸书经历了一系列反复，直到找到一个易于扩展的设计并最终覆盖50%的哈佛本科生而达到饱和。从那开始，它的触角开始伸向其它常青藤高校，一个接一个，最终覆盖了美国所有大学。最后在2005年，它开始面向高中生——并奠定了它主宰世界的基础。&lt;/p&gt;

&lt;p&gt;脸书所遵循的规则——也是脸书不同于Sixdegrees和Friendster的地方——是在一个社群里到达饱和点之后才移入一个更大的社群。通过这种方式，临界质量从未被错过，并且新的成员完美地嵌入他们来自其他学校的伙伴建构的社会结构之中。&lt;/p&gt;

&lt;p&gt;###如何估计临界质量
在“三元组、网络密度和冲突”一节中，我们讨论了冲突如何在社会网络中蔓延及其对于网络链接的密度的影响。如果你回去重新仔细看图4-13，你会发现一个非常相似的增长方程——相同的S形曲线，如同我们在图 6-1中所观察到的一样。&lt;/p&gt;

&lt;p&gt;图 6-1 扩散曲线——临界质量、繁荣和萧条&lt;/p&gt;

&lt;p&gt;图字翻译：&lt;/p&gt;

&lt;p&gt;如果从线性的蔓延到指数（病毒式的）增长的确依赖于封闭的三元组（也就是说，朋友的朋友也是我的朋友）  ，这样连接的临界质量的可以通过测量随机增加一个链接（比如，从A到B）与其它节点之间所形成的一个或多个开放三元组的概率的方法加以估计。这个概率与已经彼此相连的节点的数量（我们用2与节点数量相乘是因为每个边占用两个节点）：&lt;/p&gt;

&lt;p&gt;P(开放三元组) ~= 链接的数量/(2*节点的数量)&lt;/p&gt;

&lt;p&gt;这样，当四分之一的节点彼此相连的时候构成一个开放的三元组概率是50%——并且每一个新的链接使得闭合三元组能够创造甚至更多的链接，进一步增加形成级联（Cascade）的概率。&lt;/p&gt;

&lt;p&gt;我们在实验中发现当网络密度接近7%的时候将从线性增长（每一次增加一条链接）转化为病毒式扩散——也就是说，当有意采纳这个“觅母”、转发一个视频、加入一个网络社群等的人的比例达到7%的时候，其他人将会在关键阶段马上跟进。&lt;/p&gt;

&lt;p&gt;这是一个推动脸书走出哈佛的、神奇的数字。在我们的研究过程中，我们发现的一些其它的例子也表明当网络中的采纳比例小于10%时会发生病毒式扩散。&lt;/p&gt;

&lt;p&gt;从这一点可以得到的一个推论是在一个较小的社群里更容易达到临界质量——马克•扎克伯格（Mark Zuckerber）本能地知道或者（更可能）偶然发现。&lt;/p&gt;

&lt;p&gt;tips：
对于一个新兴公司（尤指新兴网络公司）的创立者而言，这是违背直觉的。每一个风险投资者都想知道整个市场到底有多大以及新兴公司完成市场渗透的计划。追逐小的自给自足的细分市场看上去与指数式的增长背道而驰。但是，一个细分市场的高饱和度是通往其它细分市场的一个好跳板——如果它们在地理上接近或者其利益非常吸引人。&lt;/p&gt;

&lt;p&gt;###维基经济的临界质量
关于临界质量的问题还有一种看法——参与成本理论。即使在一个提供免费服务品的世界，任何事物都有成本。这种成本包括金钱成本、时间成本、或者机会成本（也就是说，花费时间在脸书上，就无法花费时间在酒吧里——至少在移动手机变得普遍之前）。其它形式的参与文化，比如维基百科，需要其作者和编辑花费更多的时间，但得到的收益却非常短暂。&lt;/p&gt;

&lt;p&gt;一个过时但依然有说服力的例子是传真机的出现。当第一个传真机在上世纪七十年代中期，从施乐的装配线上生产出来之后，其成本高达几千美元并且完全得没有什么用处。另外不要忘记，如果一个传真从它那里发出，并没有位于另一端的一个传真机接受它。当第二台传真机在几分钟之后从生产线上滑落的时候，两台传真机的价值都无限增加了——现在一个银行可以（通过传真机）与其分支网点通讯了。但是，这台机器的用处随着越来越多的机器被生产出来而不断增加，直到传真机成为一种不可或缺的办公用品。&lt;/p&gt;

&lt;p&gt;在传真机的例子中，传真机最初被应用于大公司的总部连接其分支机构（代替了庞大的电传机）。所以每个公司独立地、按照自己的时间到达它们自己的临界质量——如果公司已经投资足够多资金到传真机设备上，在更大的范围销售传真机将会变得非常困难或者不可能。
一个经济学家会使用交易成本的概念讨论这件事情，并画出如图 6-2的曲线。&lt;/p&gt;

&lt;p&gt;图 6-2 成本曲线——社会化媒介的经济学&lt;/p&gt;

&lt;p&gt;图字翻译：&lt;/p&gt;

&lt;p&gt;假设参与成本是一个固定的值。在一些例子中（例如，传真机），当大规模生产时生产成本降低，但在参与式的文化（例如，维基百科）中，成本实际上随着生产规模膨胀而变大了——但我们可以在短期里认为它是常数。&lt;/p&gt;

&lt;p&gt;对于一个早期采纳者而言，成本是非常真实的，而利润还没有实现。当有更多人加入这个网络之后，收益以连接的数量的函数的形式增加，这使得新观念、觅母、社会网络网站的渗透漫漫长路中的每一步都变得更为容易。&lt;/p&gt;

&lt;p&gt;当使用一个产品带来的收益超过其成本的时候，扩散将接近临界质量。此时，每增加一个链接将会带来更多的链接，进一步增加收益——而成本却保持不变。&lt;/p&gt;

&lt;p&gt;如果没有到达成本/收益的平衡点，在网络中存在多少链接都是没有意义的——因为，最终在这个网络中的扩散都会失败。&lt;/p&gt;

&lt;p&gt;###内容（依旧）为王
当我开始1995年开始为网络项目而工作时  ，曾经有一个说法叫做“内容为王”。内容可以吸引使用者、留住使用者、挽回使用者。那时候流行很多理论——其中一个说应该确保用户点击鼠标不超过6次就能够找到他/她想要的内容，另一个说重要的信息不要被屏幕翻页所分割（载入的计算机屏幕的第一页之后部分信息）。不管是在过去还是在现在，这些都是好的设计准则。但是如果网站的内容非常吸引人，其它的这些都不再重要。如果翻页后的内容很有价值，人们就会点击和滚动鼠标去看。&lt;/p&gt;

&lt;p&gt;这种观点在今天同样存在：如果内容在某些方面是引人入胜的，这将提高收益并使得成本和收益的平衡更快到达，并因此将链接的临界质量从7%降低到3%或4%。如果内容的质量不是那么好，那么可能根本就无法到达临界质量。&lt;/p&gt;

&lt;p&gt;这是社会网络的定量分析止步的地方，也是关于信息重要性的理论过度盛行的领域。下面的这个理论是许多试图定性地解释信息扩散的一种方式。&lt;/p&gt;

&lt;p&gt;当我们想要知道一个信息是否可以在一个网络中扩散时，实际上我们的问题是“这个信息是否会和网络中的成员引起共鸣？”。或者，更准确地说，“个体如何获取信息？”。我们可以将信息的作用分解为几个维度的变量：&lt;/p&gt;

&lt;p&gt;•   相关性（Relevance）
 我是否关心？（以及其变体，显著性（saliency）——我现在是否在乎？）&lt;/p&gt;

&lt;p&gt;•   共鸣（Resonance）
 信息的内容和我所相信的内容是否一致？&lt;/p&gt;

&lt;p&gt;•   严重性(Severity)
 信息的内容有多好或多坏？&lt;/p&gt;

&lt;p&gt;•   紧迫性（Immediacy）
 这个信息是否需要（人们）马上行动？与严重性一起，表示（看到信息后）不做出任何行动的后果。&lt;/p&gt;

&lt;p&gt;•   确定性（certainty）
 这个信息的效果是否会导致某种痛苦或者快乐？或者这种概率非常小？&lt;/p&gt;

&lt;p&gt;•   信源（source）
 信息来自哪里？我是否信任发出信息的人？这是否曾被人们所验证？&lt;/p&gt;

&lt;p&gt;•   娱乐价值（Entertainment value）
 信息是否好玩？是否耐读？&lt;/p&gt;

&lt;p&gt;###异质性偏好
我在以前的小节中的提到的评价方式适用于特定的信息（m）和人（p）。但是在实际生活当中，每个收到信息的人按照他们自己特殊的偏好来给信息打分。在经济学中，汇总异质化的个体偏好是一个困难的问题。为了简化这个问题，让我们假设以上所提到的所有变量都可以写成数值形式（我们规定其范围为0到1）。那么，每条信息都可以被评价为：&lt;/p&gt;

&lt;p&gt;公式6-1&lt;/p&gt;

&lt;p&gt;公式6-2&lt;/p&gt;

&lt;p&gt;Beta数值代表对于一个具体的个体，当他/她采用一条信息时每一个变量的重要性。有些人非常脆弱、害怕恐吓战术（具有很强紧迫性和严重性的信息，即使相关性不高并且也不相信信源），而有些人当信息来自于他们并不完全相信的信源时，毫不犹豫拒绝相信。&lt;/p&gt;

&lt;p&gt;让我们看一下是否我们可以将这个公式应用于一些可能的场景中去：&lt;/p&gt;

&lt;p&gt;####突尼斯和埃及革命
这些事件高度依赖于信息的扩散。在这个例子中，大多数信息可以被评价为高相关性、高紧迫性，一些信息会被评价为高严重性（比如，军事活动或者警察镇压活动中的信息）。但是，在任何一个像这样的快速改变的条件下，确定性很低并且对于信源的可信性超过信息本身的可信性。也就是说，一条来自你的阿姨的话比来自一个记者的信息更可信。谣言泛滥，并且有时候误导了许多人。&lt;/p&gt;

&lt;p&gt;这样，我们能够解释每一场革命都需要一个前后一致的领导——在一个混沌的时代，一条来自领导人的信息既负载着确定性（因为领导者肯定具有更多的信息或者令人信服的假信息），也负载着对于信源的超凡的信任。&lt;/p&gt;

&lt;p&gt;####保罗∙里维尔的乘骑
保罗•里维尔（Paul Revere）（1735年1月1日——1818年5月10日）是一名美国银器匠，也是美国革命战争中的爱国者。他最出名的事迹是在莱克辛顿和康科德之战前通知当地殖民军英军即将到来。（译者补注）这是关于高严重性、高紧迫性、高相关性、高确定性信息的一个最好的例子。即使信源并不太出名，信息很快就到达了临界质量。共鸣非常高，因为人们已经相信英国人的袭击迫在眉睫。有必要注意的是保罗∙里维尔并非是向世界发出一条微博，而是造访一系列的城镇——到达一大群分散的、小的地方的临界质量，这些地方稍后团结起来一起反抗英国军队。
####电视广告
电视广告对大多数读者（一些正在选择新的、正在播出的电视的人例外）来说相关度不高，重要性不高，迫切性也不高。为克服这些缺点，广告主需要设计信息内容以提高信息的确定性（例如，“这将改善你的生活”）、信源的可信性（“六个医生有五个会推荐……”）、信息的娱乐价值。对于二手车销售者来说，其它的策略也很合适，例如放大严重性和迫切性（“现在行动，否则就没有机会了”）。&lt;/p&gt;

&lt;p&gt;对于广告的响应一般非常低，因为很多人对于品牌名字漠不关心。当然，在这种情况下，能够对抗这一规律的品牌将占据市场的主导地位。苹果公司花费数年时间和几百万美元培养了一群粉丝，正如多数体育队和一些其它公司所做的那样。迎合粉丝的品牌成功地获取回报，即使信息内容很普通——只要这些信息强化了粉丝已有的信念（我们将在本章“Python中的一个简单的动态模型”一节中讨论具体内容）。&lt;/p&gt;

&lt;p&gt;最后，多数广告无人理会——但是偶尔会有一个广告超出广告商的宣传活动，像病毒一样在互联网上传播。这经常意味着广告具有较高的娱乐价值并且值得人们在它上面花费时间（参照前面关于成本/收益分析部分），即使它不具备其它方面的因素。&lt;/p&gt;

&lt;p&gt;####连锁信
连锁信是这个类别中的一个奇特成员。来自于你认识并信任的人的信息非常重要。它通过一个好故事的娱乐价值吸引你，但如果你不转寄这封信会有严重和紧迫的后果。在这种情况下，造成伤害的确定性很低 ，但转寄电子邮件的成本同样很低(如果这个信件是真的呢？)。
####搞笑猫图片
我不知道说什么好。从个人来讲，我不认为它们值得下载，但我猜我不是一个互联网媒介的典型消费者。对于一些人来说，搞笑猫图片的娱乐价值非常高，以至于你不仅仅满足于欣赏它们或者传播它们，还要去创造新的图片。我手上有额外的时间吗？&lt;/p&gt;

&lt;p&gt;许多其它的信息以相同的方式传播——思考一下宗教类的信息并且把天主教信息和热心的牧师的话对比。虽然信息的内容或许相同，信息所表达的意义却完全不同。有的信息强调商品的价值，有的信息剖析最新的流行时尚。&lt;/p&gt;

&lt;p&gt;##6.2信息如何影响网络
信息、观念和看法的改变相对得很快，并且在这个过程中，影响网络解构。同时，网络结构也制约着信息扩散的过程。结果构成了一个双重反馈回路：社会结构影响信息扩散，而信息则影响社会结构的变化。在这一节中，我们将要讨论内在机制——并尝试构建一个信息扩散的简单的动态模型。&lt;/p&gt;

&lt;p&gt;##具有相同羽毛的鸟
在第5章的“二模网络的理论”一节，我们简要得提及了同质性的概念——节点之间的链接的建立基于节点之间的相似度。但这个观念已经存在了几百年了（俗语说“羽毛相同的鸟总飞成一群”），在科学研究方面，拉扎斯菲尔德（Lazarsfeld）和墨顿（Merton）于1954年分析了这一下现象  ，他们区分了两种类型：身份同质性和价值同质性。&lt;/p&gt;

&lt;p&gt;身份同质性表示具有相同社会阶层、财富和地位的人（与随机的情况相比）更倾向于彼此相互联系。价值同质性表示倾向于与以相同方式思考或者喜欢相同的东西的人彼此相互联系，不管阶层和地位如何。&lt;/p&gt;

&lt;p&gt;美国文化当然更显著地受到价值同质性的影响，而在其它社会当中，个人的教育和阶层身份经常更清晰明确地影响他们所能接触到的信息或者文化人造品的类别。这在网络上更为明显，因为在互联网上“没有人知道你是一条狗”。一个人的网络身份虽然现在变得很普遍并接近于永久，但与线下的身份相比，仍然非常容易改变。&lt;/p&gt;

&lt;p&gt;地位同质性和价值同质性的一个区别正是在于“可塑性”（malleability） 。社会阶层和类别可被认为是永久的属性——社会流动通常是一个很缓慢的过程，因而无法通过社会网络分析把握。与之相反，价值同质性则以互联网的速度变化着。&lt;/p&gt;

&lt;p&gt;###同质性 VS. 好奇心
社会学家观察到另外一个有趣的现象——虽然同质性是一个很强的社会因素，但如果两个人不太像，但差异也没有达到使得两个人找不到谈话的话题时，另外一个因素将会发挥作用。这个因素是好奇心（获取信息的内在动机），结果使得形成链接的可能性呈现图 6-3中所示的双峰形状。对每个人来说，“好奇心山峰”的高度和位置是不同的，并且与我们的猎奇及规避猎奇的趋势有关（事实上，这可能是我们基因组成的一部分，尤其是我们大脑中的D1多巴胺受体的数量有关）——但它总以某种形状存在着。&lt;/p&gt;

&lt;p&gt;图 6-3 同质性与好奇心&lt;/p&gt;

&lt;p&gt;图字翻译：&lt;/p&gt;

&lt;p&gt;最主要的特征是“无聊的陷阱”。遇到一个和你在各个方面几乎一模一样无法提供新的信息或者刺激——于是建立链接的可能性迅速降低。人与人之间无聊的陷阱的位置和程度也不一样，并与我们的大脑对新奇性的需求和处理有关系。&lt;/p&gt;

&lt;p&gt;自我中心主义者的这个波动的极值是无法控制的，他们以没有能力处理新奇性和很难形成社会纽带并理解他人为特征。对威廉斯氏综合症患者来说，寻求新奇性和群集性走到了极端（缺乏抽象和空间逻辑能力）。&lt;/p&gt;

&lt;p&gt;你也可以把它看作一个随着时间的演变过程。想象一对刚刚遇到对方的男女。他们或许有一些相似的特质（都很年轻漂亮，如果没有其它地方相似），但总体上讲他们的同质化水平可能很低；相反，他们的好奇心都达到了顶峰。随着关系的进展，他们对彼此的了解不断加深，即使对于他们从来不会交流的事情。最终，男孩知道了他的女朋友背负着大笔的学生贷款，女孩了解到她的男朋友把脏袜子到处丢的坏习惯。这或许是位于好奇心和真的同质性之间的低谷。如果他们的关系走过了这个低谷，他们会变得能够接受了解对方所有的事情并且幸福得白头偕老。除了在之后的十几年里，他们没有对彼此说过一句话——如果他们相互之间没有什么新的消息为什么要说话呢？&lt;/p&gt;

&lt;p&gt;###跨界者&lt;/p&gt;

&lt;p&gt;我们每个人的基因组成和个性差异使得我们的社会网络也是不一样的，并且同质性到目前为止也不是普遍的。一些人喜欢做跨界者，他们和不同的群体存在联系，表现出来非常低的同质性。他们不仅是关键的信息通道，他们也可以利用作为中介和套利的机遇——这意味着在石器时代与不同部落建立贸易往来或者在现代在华尔街工作。我们已经在第4章的“禁止进入的三元组”和“结构洞”讨论过这个问题——但跨界行为也可以透过信息扩散的透镜来理解。&lt;/p&gt;

&lt;p&gt;###弱关系
在二十世纪七十年代，马克∙格兰诺维特（Mark Granovetter）开展了一项关于在南波斯顿某一个社群工作的蓝领工人的研究。他的大多数调查对象是爱尔兰移民，在建筑业或者其它技术工行业工作，并且花费大量的时间在酒吧里。工作，尤其是建筑业的工作，非常不稳定，在任何时间都有一部分人处于失业和找工作的状态中。这个研究项目的目标是研究工作信息如何在社会网络中流动。&lt;/p&gt;

&lt;p&gt;当地的酒吧是社交中心——每个人都定期地参加聚会并认识大多数其他去酒吧的人。所以最初的研究目的是分析酒吧里的谈话对于个人找工作能力的影响。&lt;/p&gt;

&lt;p&gt;但是结果非常令人吃惊——通过经常联系的酒吧里的朋友找到新工作仅占30%。大多数时候，工作信息来自于疏远的社会关系——远亲、朋友的姻亲等（也就是说，与他们存在弱的网络关系的人）。&lt;/p&gt;

&lt;p&gt;格兰诺维特推理强关系增加同质化程度——所以当一个人需要新的信息（比如，当找工作的时候），与处于中心的个体存在强关系的人缺乏任何新的信息。同时，通过弱关系联系的人们则完全不同（从信息连接的角度而言）。&lt;/p&gt;

&lt;p&gt;###邓巴数字和弱关系
在罗宾∙邓巴（Robin Dunbar）的论文中（现在已成为经典）  ，人类社会网络的平均规模（也就是平均的程度中心性）是150——并且从认知学角度来看，这个数字为前额皮质的大小或者我们推理其他人和关系的天赋才能所局限。&lt;/p&gt;

&lt;p&gt;但这不是那么简单的事情。我想用一个金字塔来展示邓巴数字的各段（见图 6-4）。在顶端，最强的关系是我们直系亲属和最好的朋友，我们每天与他们打交道，并认为他们是最亲密可信的人。邓巴发现这个亲密的群体的大小平均是7——它包括我们的配偶、父母、兄弟姐妹和子女。注意，这个数字和人类工作记忆的容量大小相同（7+/-3） ，所以我们可以推断我们的直接的和最亲密的社会联系是那些我们能够或必须存储在工作记忆中的。&lt;/p&gt;

&lt;p&gt;图 6-4 邓巴金字塔&lt;/p&gt;

&lt;p&gt;图字翻译：&lt;/p&gt;

&lt;p&gt;这个列表进一步分层为“扩展家庭”（extended family，这个群体包括朋友、表兄妹、姻亲等）：他们不是你每天都打交道的人，也不是你认为最亲密的人。再往下一层是“伙伴”，包括同事、一个更大的朋友和陌生人圈子、远亲。最下面一层包括其他所有的人，主要是你的弱关系。&lt;/p&gt;

&lt;p&gt;但是你的脸书朋友和推特朋友在哪里呢？多数情况下，他们位于金字塔的最底部。正如你从上面关于四种关系的描述中所看到的，当我们从金字塔上走下来，不同的社会关系所附带的情绪性和信息分享类信息不断降低，而人数不断增加。所以你的837个推特朋友所包含的情绪性注意力有多少呢？其实很少。&lt;/p&gt;

&lt;p&gt;对于一个服务行业的商业公司而言，社会化媒体的个体接触主要也是因为这个原因。当一个公司的代表与一个推特粉丝在个体层面上互动（例如，回应一个抱怨）的时候，他或她就在这种关系中投入了一些情绪性的能量。因为这种互动是公开的，它不仅维系着与一个现在的消费者之间的关系，还支撑着与其它的推特粉丝之间建立关系的（想象中的）可能性。&lt;/p&gt;

&lt;p&gt;因为每个人对于亲密的个体联系具有不同的偏好，这个金字塔对于每个人可能完全不同。我认识的一些人的最主要的社会联系来自于脸书和博客，他们的线上关系和“扩展家庭”开始融合。因为维持一个线上关系需要很少的情感投入，他们线上朋友可能有几千个却很少跟他们的直系亲属联系。近几年，网络流浪者开始变得与现实中睡在沙发上、一年周游国家数次的流浪者一样。&lt;/p&gt;

&lt;p&gt;##6.3 Python中的一个简单的动态模型
既然我们已经了解了相关的理论和例子，让我们开始尝试为社会网络中的信息扩散建立模型。我们将建立一个非常简单的多主体模型，在这个模型当中，社会网络中的主体之间相互影响并达成共识（如果这是可能的）。&lt;/p&gt;

&lt;p&gt;这个模型最初是由诺亚∙弗里德金（Noah Friedkin）于1998年提出来的  。这个模型遵守一个非常简单的前提：每个参加讨论的人对于问题都有自己的看法（或者他们自己的态度），并且每个人都在一定程度上接受来自其社会网络的朋友的影响。我们同时做出一个假设，模型中的主体所要交流的信息是一个介于0和1之间的数值。它可以是股票市场上升的可能性，或者一个主体使用一种非法药物的概率（这个模型曾用于研究信息在这两种情况下的扩散）。&lt;/p&gt;

&lt;p&gt;让我们开始建立我们的简单模型。我们并不会使用一个多主体建模的软件包，或者模拟包——其实我们也并不需要用它们来建立模型。&lt;/p&gt;

&lt;p&gt;让我们从为一个人定义一个Python的类开始：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Person(object):
    def __init__(self, id):
        #从一个单一的初始偏好开始
        self.id=id
        self.i = r.random()
        self.a = self.i
        #我们将初始意见和随后的信息对等
        self.alpha=0.8
    def __str__(self):
        return(str(self.id))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一个人有一个编号ID和三个重要的额数字：self.i是一个初始态度，self.a是一个演化出来的态度（它累积了这个人所有朋友的影响），最后self.alpha是我称之为“轻信程度因子”（也就是说，alpha越高，我越相信我的朋友的意见，并且越不相信自己最初的知识）。首先，我们假设每个人的轻信程度是完全相同的。&lt;/p&gt;

&lt;p&gt;现在，让我们创造一个以人为节点的网络。NetworkX允许我们使用任何对象作为一个网络节点，而我们将要利用这一特点:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;density=0.9
g=net.Graph()
## 创造一个以人为对象的网络
for i in range(10):
    p=Person(i)
    g.add_node(p)
##这是一个简单的随机网络，每对节点之间存在链接的概率相同
for x in g.nodes():
    for y in g.nodes():
        if r.random()&amp;lt;=density: g.add_edge(x,y)
## 画出这个生成的网络并按照节点的数字给节点赋予颜色
col=[n.a for n in g.nodes()]
pos=net.spring_layout(g)
net.draw_networkx(g,pos=pos, node_color=col)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首先，我们初始化一个空的网络图，并在其中增加10个以人为类型的对象。然后，我们循环遍历每一个可能的两个节点之间的组合。使得概率等于密度的参数，我们将在两个节点之间添加一条链接。这种生成图的算法称之为厄多斯-任易（Erdos-Renyi）算法  ，是生成一个随机图的最简单的方法，并产生一个正态分布的度分布。&lt;/p&gt;

&lt;p&gt;厄多斯-任易（Erdos-Renyi）随机图已经成为许多图的算法和模型的一个基准，但我们现在知道，作为真实社会网络的代表它们非常不实际，因为多数社会网络具有一个长尾的度分布（也就是幂律）。但是，因为其它生成网络的方法更加复杂并超过了这个模型的范围，我们将在此使用这个简单的模型。这个网络看上去应与图 6-5相似。&lt;/p&gt;

&lt;p&gt;图 6-5 一个扩散模型的多主体的网络&lt;/p&gt;

&lt;p&gt;现在准备工作已经做完了，让我们开始创造模拟部分。在人这个类别中插入下面这个函数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def step(self):
    # 循环遍历所有的邻居并累加他们的偏好
    neighbors=g[self]
    # 所有的邻居节点的权重相同
    w=1/float((len(neighbors)+1))
    s=w*self.a
    for node in neighbors:
        s+=w*node.a

    # 更新我的意见为初始意见加上所有其它影响之和
    self.a=(1-self.alpha)*self.i + self.alpha*s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个函数基于他或她的朋友的态度加权总数和他或她的轻信程度因子（alpha）而更新一个个体的态度（a）。首先，我们将计算权重的大小。为了计算简便，每个人的意见所占的权重相等（第五行代码）。然后，我们计算一个个体自我意见，以及他或她的邻居中每个人的意见的加权之和（第6到第8行代码）。接着，我们更新现在的意见（第11行代码）:个体在时间t的意见等于客观知识乘以轻信因子，再加上他或她的所有朋友意见的加权之和。最后，让我们用一个循环的方式跑这段代码来看一下这个网络如何随着时间变化：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;##重复30个时间段
for i in range(30):
    ## 循环遍历所有的网络节点让它们走一步
    for node in g.nodes():
        node.step()

    ## 汇总演化而来的态度数值，输出到终端并画出结果。
    col=[n.a for n in g.nodes()]
    print col
    plot.plot(col)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;跑这个模型30个时间段所得的结果看上去如图 6-6所示。随着时间变化，主体之间的意见越来越彼此相近，虽然它们从未达到共识。&lt;/p&gt;

&lt;p&gt;图 6-6 扩散模型运转一步&lt;/p&gt;

&lt;p&gt;让我们现在开始调整一下模型参数。如果所有的主体都非常轻信并接受他们的朋友所说的一切，那么结果会是怎样？让我们设置alpha = 1并看一下结果如何变化。图 6-7表明每个人很快达到共识——即使基于事实来看这个共识是完全错误的。&lt;/p&gt;

&lt;p&gt;图 6-7 扩散模型中的共识&lt;/p&gt;

&lt;p&gt;###处于中间的影响者
现在我们假设一些宣传主体（影响者、福音传教士）被嵌入到网络当中。每一个这样的节点都具有重要影响。在这个模型中，这些主体的意见是1，而其他所有主体的意见分布于0到1之间。
我们在模型中定义一个影响者为一种特殊类型的人：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Influencer(Person):
    def __init__(self,id):
        self.id=id
        self.i = r.random()
        self.a = 1 ## 它们的意见很强并且不可动摇

    def step(self):
        pass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接着，我们添加一些影响者到这个网络中并将他们同其他主体相连：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;influencers=2
connections=4
##将影响者加入到网络之中并将他们与其它3个节点相连
for i in range(influencers):
    inf=Influencer(&amp;quot;Inf&amp;quot;+str(i))
    for x in range(connections):
        g.add_edge(r.choice(g.nodes()), inf)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后，像以前一样跑这个模型：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## 重复30个时间段
for i in range(30):
    ## 循环遍历网络中所有节点并让他们运转一步 
    for node in g.nodes():
        node.step()
    ##汇总演化而来的态度数值，输出到终端并画出结果。
    col=[n.a for n in g.nodes()]
    print col
    plot.plot(col)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;图 6-8表明这两个影响者具有一个很强的效果——但是，初始位置并不允许主体完全地朝着极值迁移。影响者的数量越多，模型朝向一个极值的共识演化的可能性越高。&lt;/p&gt;

&lt;p&gt;图 6-8 添加两个影响者进入网络中以加速网络朝向极值的演化&lt;/p&gt;

&lt;p&gt;这个模型非常简单，没有考虑许多其它影响信息扩散的因素。其中没有同质化的影响，也没有临界质量的作用，并且模型的演化是线性的。但是，这是一个开始，我们要进一步优化这个模型。&lt;/p&gt;

&lt;p&gt;###练习
我在这里所展现的这个模型的实现方式过于简单。读者可以尝试下面这些主意：&lt;/p&gt;

&lt;p&gt;• 使得轻信程度因子异质化而不是所有的主体的轻信程度因子相同。&lt;/p&gt;

&lt;p&gt;• 试验使用多个参数调节的无标度网络而不是使用简单的随机网路。&lt;/p&gt;

&lt;p&gt;• 对于朋友的意见应用信任权重（也就是说，不是给所有的意见的相同权重）而不是基于主体之间的链接的强度。&lt;/p&gt;

&lt;p&gt;• 使用多个维度的态度进行计算——一个真实的人对于不同的事情有多种态度，模型中的主体也是这样。&lt;/p&gt;

&lt;p&gt;##6.4网络和信息的共同演化
现在我们将要优化这个模型中的影响因素，以便允许不同的网络类型、个体的态度和网络中的信息内容。首先，我们将把step函数从之前的模型中去掉，与之相反，引入一个和单一主体交换信息的互动函数，而不是和所有的邻居交换信息。轻信程度因子的作用在这里同样适用：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## 随机的挑选一个节点交换信息，
## 而不是和所有的节点交换信息。
## 这将创造一条边并根据他们之间的相似性赋予权重。
def interact(self):
    partner=r.choice(g.nodes())
    s=0.5*(self.a + partner.a)
    # # 更新我的意见为初始意见加上所有其它影响之和
    self.a=(1-self.alpha)*self.i + self.alpha*s
    g.add_edge(self,partner,weight=(1-self.a-partner.a))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;到现在为止，这是一个随机的选择。在信息的交换和接收之后，我们将在两个节点之间创造一条链接。这条边将被按照相似度赋予权重——节点之间的相似程度越高，他们之间建立的链接的强度越高。&lt;/p&gt;

&lt;p&gt;但是，我们也知道在一段时间过去之后，链接会逐渐减少，一个最简单的方法是用一个为常数的衰变率（decay rate）来描述：&lt;/p&gt;

&lt;p&gt;v(t+1)=v(t)*(1-decay_rate)&lt;/p&gt;

&lt;p&gt;衰变率在现实网络中是非常低的，但是在线上社会网络中会明显得要高（因为在脸书上取消朋友关系或者只是忽视他们的信息与跟现实世界中的朋友吵架相比，要简单很多）。但是，这个模型非常抽象，所以我们将选择一个简单的数字。我们设置网络的衰变率在每个时间段为1%。&lt;/p&gt;

&lt;p&gt;tips:
一个模拟中的时间段是完全随意的。但是，人们也可以将它（以及衰变率）与作为交往频率的函数的链接的强度的概念相联系，见第2章“什么是图”一节的描述。&lt;/p&gt;

&lt;p&gt;所以，以之前的方式，让我们初始化这个网络，并运行这个模拟。图 6-9表明一个与其他节点联系紧密的节点，如何在他/她周围分布着一小群意见相似的粉丝，而那些与其他节点联系并不紧密的节点保持着与众不同的意见。这样，带有完全不同意见的节点可以和平共处并且共识会涌现（如图 6-10）。&lt;/p&gt;

&lt;p&gt;图 6-9 这个网络表明意见相似的节点之间联系紧密而意见不同的节点分布于边缘上&lt;/p&gt;

&lt;p&gt;图 6-10 网络和态度的改变允许冲突的态度和多种共识并存&lt;/p&gt;

&lt;p&gt;但是，这也依赖于传播参与者的随机选择这个概念——我们知道这是不正确的（见本章“信息如何影响网络（反之亦然）？”一节）。所以，现在让我们引入同质性的概念。这样做，每个人都维持着自己与他/她所知道的一系列的人的关系，以及自己在多大程度上与他们相似。在这个例子当中，我们已将同质化程度数值存储在图的链接属性中，通过下面这行代码:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;g.add_edge(self,partner,weight=(1-self.a-partner.a))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是在我们开始利用这个信息选取互动对象之前，我们来讨论一点关于选择的事情。正如我们在 本章前面“信息如何影响网络（反之亦然）？”一节所讨论的一样，我们以更高的概率选择与我们相似的人——但是兴趣中的第二个峰值使我们与和我们非常不同的人交谈。一些传播行为也可能是随机的。为了允许我们按照正比于和其他人的相似度（或不相似度）水平的概率挑选互动对象，我们应用一个叫做“轮盘赌选择”的程序。&lt;/p&gt;

&lt;p&gt;图 6-11 选择网络伙伴的有权重的轮盘赌&lt;/p&gt;

&lt;p&gt;想象一个轮盘赌的轮子的各个扇区之间的权重是不同的（图 6-11）。这样，将赌注押在一些扇区上赢得概率更高，轮盘的旋转是公平的（也就是均匀分布的）。我们通过按照相似度水平构建一个传播伙伴的列表（如果需要，多次重复他们的名字）的方法应用轮盘赌方法。这样，一个从列表中进行的一致的随机选择，将返回一个权重分配合理的轮盘赌选择：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def _roulette_choice(self,names,values, inverse=False):
    &amp;quot;&amp;quot;&amp;quot;
    轮盘赌方法基于一组数字得到不同权重的选择
    名字和数值应该是等长的列表
    数值的范围在0到1之间
    如果 inverse=False, 数值较高的名字具有更高的选择概率
    如果inverse=True，数值更低的名字具有更高的选择概率
    &amp;quot;&amp;quot;&amp;quot;
    wheel=names
    for i in range(len(names)):
        if not inverse:
            wheel.extend([names[i] for x in range(1+int(values[i]*10))])
        else:
            wheel.extend([names[i] for x in range(1+int((1-values[i])*10))])
    return(r.choice(wheel))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后，我们需要优化interact（）方法一允许我们使用轮盘赌方法。我们再一次掷骰子并决定是否传播伙伴是相似的（以一个0.6的概率）或不相似的（以一个0.3的概率）或完全随机的（以一个0.1的概率）。如果一个人不和任何人说话，他/她将随机地挑选并建立一些网络链接：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def interact(self):
    &amp;quot;&amp;quot;&amp;quot;
    随机的挑选一个节点交换信息，
          而不是和所有的节点交换信息。
    这将创造一条边并根据他们之间的相似性赋予权重。
    阶段 II –使用轮盘赌选择而非随机选择
    &amp;quot;&amp;quot;&amp;quot;
    neighbors=g[self].keys()
    values=[v[&#39;weight&#39;] for v in g[self].values()]
    ##掷骰子已决定互动的概率 
    ## 相似 (0.6), 不相似(0.3)或随机 (0.1)
    roll=r.random()
    if r &amp;lt;= 0.1 or len(neighbors)==0:
        partner=r.choice(g.nodes())
    elif r&amp;lt;=0.4:
        partner=self._roulette_choice(neighbors,values,inverse=True)
    else:
        partner=self._roulette_choice(neighbors,values,inverse=False)
    w=0.5
    s=self.a*w + partner.a*w
    #  更新我的意见为初始意见加上所有其它影响之和
    self.a=(1-self.alpha)*self.i + self.alpha*s
    g.add_edge(self,partner,weight=(1-self.a-partner.a))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;让我们也优化这个模型以便生成更多的一些图。第一个是“共识图”——展示的是网络中每个人的平均意见，以及最大和最小值：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def consensus(g):
    &amp;quot;&amp;quot;&amp;quot;
    计算图中的作为共识的意见
    &amp;quot;&amp;quot;&amp;quot;
    aa=[n.a for n in g.nodes()]
    return min(aa),max(aa),sum(aa)/len(aa)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们将模型的每一次迭代生成的网络共识的数值添加到一个列表里，并在后面绘制出结果：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cons=[]
for i in range(runtime):
    for node in g.nodes():
        node.interact()
....
....模拟代码在这里....
....
cons.append(consensus(g))
....
.... 模型的最后一次运转之后....
....
plot.figure(i+1)
plot.plot(cons)
同时，让我们通过绘制直方图的方式来看一下边的数值。
plot.figure(i+2)
plot.hist([e[&#39;weight&#39;] for f,t,e in g.edges(data=True)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tips:
完整的模型代码可以从Github下载（&lt;a href=&#34;https://github.com/maksim2042/SNABook/chapter6）&#34; target=&#34;_blank&#34;&gt;https://github.com/maksim2042/SNABook/chapter6）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;让我们现在重新载入并运转这个模型。结果如图 6-12和6-13所示。&lt;/p&gt;

&lt;p&gt;图 6-12 最终的网络中，节点的意见可以非常不一样&lt;/p&gt;

&lt;p&gt;图 6-13 网络收敛到一个在可接受范围内的意见，但允许内部存在一些多样性&lt;/p&gt;

&lt;p&gt;我们的第一个观察是网络迅速地到达了稳定状态——但这个稳定状态并非形成共识，而是排除了最高和最低极端意见的一种分布广泛的可接受的意见，这种状态适于形成一种让人感到舒适的平均意见。在缺少意见领袖的条件下，平均意见的选取是非常随机的——但是我们可以非常肯定的是，如果我们的随机数生成器是公平的，取得的结果是远离极值的。&lt;/p&gt;

&lt;p&gt;网络并未变成群集内部同质化——相反，如果节点的意见在可接受范围内，那么它们可以共存于一个稳定的动态均衡中。这是如何实现的呢？&lt;/p&gt;

&lt;p&gt;我们在本章中讨论了这个机制——它是弱关系。如果你以直方图的形式绘制出这个网络的链接的强度（图 6-14），你会发现强关系非常少见（特别弱的关系也很少见）。相反，链接的强度似乎分布于一个0.3的均值左右，这是一个很好的、稳定的弱关系。&lt;/p&gt;

&lt;p&gt;图 6-14 多数链接是弱关系或者中等弱关系，正如邓巴金字塔所展示的。&lt;/p&gt;

&lt;p&gt;这进一步加强了链接强度的邓巴金字塔——强关系很少见并且需要完全的共识（这也是很少见的），相反弱关系很容易建立并维持。&lt;/p&gt;

&lt;p&gt;##练习
•   加入影响者。他们如何改变演化动态？如果一些影响者互相冲突（具有截然相反地意见），网络会分化吗？&lt;/p&gt;

&lt;p&gt;•   在模型中加入大的冲击。例如，一个主体可以在一个随机的时刻将自己的意见改变为极值。他/她的朋友们是否回来劝阻他/她？&lt;/p&gt;

&lt;p&gt;•   加入不同传播能力的主体。例如，广播者可以一次同所有的人讲话。&lt;/p&gt;

&lt;p&gt;•   在这个模型的基础上构建一个选举模型。一些候选人为了获得全体的注意力而竞争。他们应采用什么样的竞选策略以影响结果？&lt;/p&gt;

&lt;p&gt;###为什么为网络建立模型
在本节里，我们已经表明使用寥寥数行代码，我们能够概述关于网络动态和变化的理论，并尝试去通过模拟的方法检验它们。经常地，在一个需要和很多实证数据打交道的环境里，形成一个关于驱动网络变化以及变化方向的简洁的理论变得非常困难。模拟模型帮助我们发展出更简洁的理论，并允许我们很快地检验多种不同的观点 。&lt;/p&gt;

&lt;p&gt;这个模型可以作为建立其它信息扩散模型的实验基地。例如，想象一个网络当中的一些节点出现然后又消失以传递一些独特的信息。或者一个在一段时间内可以不受干扰地演化的网络，之后注入一个重要的信息（例如，“传教士和野人”问题 ）。或者，想象着是一个模拟毒品贩运网络的模型，作为一个警察局的网络专家，你需要破坏网络中的信息流动。类似的可能性是无穷无尽的。&lt;/p&gt;

&lt;p&gt;可计算社会科学（Computational Social Science ，简称为CCS）的整个领域已经从社会网络分析、人工生命、人工智能以及其它的一些领域的交汇中开始升起。这或许将成为我们下一本书的主题。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>重返沙堆：通往理解信息扩散的实在之路</title>
      <link>https://chengjun.github.io/en/post/cn/2012-05-16-return-to-the-sandpile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chengjun.github.io/en/post/cn/2012-05-16-return-to-the-sandpile/</guid>
      <description>

&lt;p&gt;本文载于《数字媒体阅读报告》&lt;/p&gt;

&lt;p&gt;How Nature Works: The Science of Self-Organized Criticality 作者: Per Bak&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://jasss.soc.surrey.ac.uk/4/4/reviews/bak.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;黠之大者&lt;/p&gt;

&lt;p&gt;任何一个学科都需要从其它学科学习其精髓，对于在走向可计算化道路的社会科学，尤其是传播学而言，这种开放性更是时代的压力和必然的结果。因为网络时代的到来所带了的传播关系的变革、数字化的行为印记（digital traces or digital footprint）、大规模的网络数据的开放都推动着学科的变革。无疑对于传播学而言，这是一个必须抓住的机遇。&lt;/p&gt;

&lt;p&gt;爱因斯坦在老年时在一个自述中讨论了一个问题，即为什么他念了物理没有念数学。他说:“在数学领域里，我的直觉不够，不能辨别哪些是真正重要的研究，哪些只是不重要的。在物理领域里，我很快学到怎样找到基本的问题来下功夫。”我想这几句话的意思应该是每一个大学教授，每一个大学研究生应该仔细想法体会的。如果思考重要的问题，自然做出的东西不容易琐碎（trivial）。虽然最终问题的本质可以用一个美妙的数学形式表达（不应该是统计方程），但从那么多的相（万象）中找到基本的相，稳定的相（pattern)。依然是一个不容易的事情。
到幂律分布（power law）之类的发现依然是唯相的阶段。社会科学的冒进在于每次都妄想一个理论框架。每次都拿理论发现来宽慰自己。殊不知己之理论与彼之理论，相差如同天壤。大数据（big data）引发了很多欢呼和争论，虽然这是机遇，但也隐含着危险。大数据（big data）如果是无偏的，有代表性的，那么就蕴含着机遇。常见的一个错误是误以为google成功于海量数据，谬矣。信度和效度的问题，在我的理解里，这都是你选择的测量的可计算性的问题。好的测量（measure）往往一针见血，如货币，如基因，如能量，如比特。在互联网里目前最成功的测量是什么？我以为是pagerank。借助用户的评价，一下子就抓住了一个网页的重要性！googe最成功的是pagerank这个好的测量。这样好的测量才能赚钱，才有可计算性，基于兹的研究才有信度和效度。类似的测量当属度了，度分布的幂律分布（power law）被无数的研究所发现，可以算到了唯相了。&lt;/p&gt;

&lt;p&gt;作者愚见，觉得扩散是最为普遍而重要的现象，它广泛地存在于各个学科中，并几乎都成为最重要也是研究的最彻底的、最吸引人注意力的领域。我自己对于扩散有着超乎直觉的兴趣。借用古希腊哲学家的话：万物皆流，万物皆变。身在浩浩汤汤的洪流中的个体很容易对流产生兴趣。因而，我将研究流的扩散，更具体的说信息的扩散，作为了自己博士研究的主要工作。
而选择研究信息扩散的一个驱动力就是巴克（Per Bak）的这本书《大自然是如何工作的》，这本书通过沙堆模型讲自组织临界性，对我的启发很大。当我对信息扩散的数据浸淫日久之后，深感必须重返沙堆模型，才能真正理解信息的扩散，因此便有了本文。在本文当中，我将归纳关于扩散研究的三种路径。&lt;/p&gt;

&lt;p&gt;##一、描述式的社会科学套路
如经典的新闻扩散（news diffusion）的研究、两级传播理论（two-step flow）、创新的扩散（diffusion of innovations）。这些研究主要是为了描述现实，沿着这条道路走下去，可以更真实地理解5w，却很难理解1h（即how）。&lt;/p&gt;

&lt;p&gt;虽然社会科学因为无历史包袱，所以视角更为多元，比如两级传播理论所揭示的媒介的直接影响非常不同于自然系统的扩散的特点， 经典的新闻扩散研究发现的J曲线指出人际作用和媒介作用的对立，以及其对传播规模的非线性影响也很有想象力。但社会科学却在可计算化方面做得并不好（读者可参见本文作者在上一期杂志上关于计算传播学的文章）。比如经典的创新的扩散理论中所着重论述的s曲线实在是一个坏到家的定义。因为并未能给出s曲线的数学表达，而几乎不管什么曲线方程（如罗杰斯蒂方程，但注意s曲线不是罗杰斯蒂曲线），只要使用超过三个数学参数就可以拟合任何曲线，这使得大家即喜欢这个s曲线的比喻，又根本抓不住什么才是s曲线。成为了难以比较，不可琢磨的臆测。&lt;/p&gt;

&lt;h2 id=&#34;二-微分方程的数学视角&#34;&gt;二、微分方程的数学视角。&lt;/h2&gt;

&lt;p&gt;比如Bass扩散模型(bass diffusion model), 这实在是一个了不起的工作。我写一个的短评，如下：&lt;/p&gt;

&lt;p&gt;从bass diffusion model开始讲，这个与生存（survival analysis）里的hazard rate息息相关。因为F&amp;rsquo;(t)/(1-F(t))被定义为hazard rate。其实是一个条件概率，就是没有采纳的人（没被传染的人）（1-F(t)）在时间点t采纳（被传染）的概率。&lt;/p&gt;

&lt;p&gt;关于hazard rate设置的方法导致Bass扩散模型(bass diffusion model)，前几天刚看了，h(t)=p+q*F(t)。解这个微分方程，可以求出F(t)和f(t)。这个东西可以预测增长曲线。p和q分别代表创新性和模仿性。感觉很好玩。p=0, 即没有创新性的时候，是罗杰斯蒂增长（logistic growth）；q=0, 即没有模仿性，只有创新性的时候，是指数增长（exponential growth）。&lt;/p&gt;

&lt;p&gt;讲到谣言传播的第一种模型的时候，hazard rate=d，这个时候就是指数增长；但这样设置有些随意（arbitrary），因为有些人拒绝传播。就有了一个叫拒绝率r的东西，这个我还是第一次看到，因此它是在试图修正hazard rate。那么r是什么呢？没有讲清楚。我试图从R(t)=r*F(t）/(1-F(t))这个我自己构造的公式来理解。r*F(t)衡量的是已经知道谣言的人拒绝传播的概率, 再除以1-F(t)就是不知道谣言的人受拒绝传播的人影响的概率。 那么就有h(t)=d-R(t)。 但这种工作有点arbitrary，因为你说p是创新性，q是模仿性，然后就开始推导了 （推导可见我的一篇博文， 另电子杂志可以加链接于我而言是意见快乐的事情）
下面沿着率方程的道路走下去的是一个伟大的传统，即传染模型（epidemic model）。最主要的是sis和sir。其主要思路是将传染的过程分为3个阶段：susceptible&amp;mdash;&amp;gt;infectious&amp;mdash;-&amp;gt;recovered (and immune)。sir说一次恢复，永远免疫，再也不怕了；sis则不然，好了还会被再次感染。传染病模型中一个主要的工作是确定一个传播率，它是感染率和治愈率的比值。这个传播率一般存在一个threshold，当高于这个threshold的时候，能够全局传播；否则只能感染少输人。&lt;/p&gt;

&lt;p&gt;网络科学开始考虑人际接触关系（contact relationship）是如何受网络度分布的影响的，加入度分布的因素之后开始考虑统合门槛(threshold)的大小问题，一个著名的工作是Romualdo etc在2001年发表的一篇题为epidemic spreading in scale-free networks的论文，被广泛引用，因为他们发现scale-free network里的感染门槛是0！！！没错，就是0，也就是说全局传播不是问题。&lt;/p&gt;

&lt;p&gt;不过，要小心，这个模型是根据sis做的，如果是sir情况是如何呢？（留作思考，其实我也不知道）这一点很重要，因为当你把它用在信息的渗流的时候，是有风险的。举例子说：Romero &amp;amp;Jon kleinberg （2011）等人研究hashtag(e.g. #ows)在twitter上的扩散，发现多次接触具有很高的边际作用，发现多次接触信息对于信息转发具有显著效果（Repeated exposures to a hashtag on Twitter has significant effects）。那么多次接触单个的信息（repeated exposure to a specific tweet）呢？其情况会大有不同。因为hashtag是一个类别（category），下面有很多子类别。正如感冒细菌下面包含各种各样的细菌一样。加到一块的影响，使得影响很大，但对于单个类别的感冒细菌来说，你得了一次，就不会再得第二次了。即对于单个信息来说，多次接触没有那么大的影响。&lt;/p&gt;

&lt;p&gt;##三、平均场理论视角下的门槛模型（threshold model）
门槛模型（threshold model）最好的诠释仍然是元胞自动机（cellular automaton）， Thomas Schelling的分隔模型（Models of segregation）说每个人都有一个关于周围邻居肤色比例的偏好（peference），超过一定比例后，就会迁移。最简单的就是Granovetter等提出的门槛模型了，计算每个个体（agent）行为改变时其朋友中行为改变比率，但按照平均场视角，这其实不重要，重要的是平均起来的总体效果，最简单的就是门槛的数学分布，按照格兰诺维特的想法，这个数学分布最终决定了扩散的规模。&lt;/p&gt;

&lt;p&gt;自组织临界性最早是BTW sandpile model所提出的，沙堆理论是一个非常强大的metaphor，其主要提出者bak写了另外一本非常强大的书籍介绍其核心思想：其所覆盖的范围真是超乎想象。&lt;/p&gt;

&lt;p&gt;自组织的魅力在于可以对扰动做出最丰富的反应!反应是很平常的，难在最丰富的反应。那是什么样的呢？其实是空间和时间两种分布的幂律特征。&lt;/p&gt;

&lt;p&gt;沙堆模型(Bak等人1988年的论文）所描述的自组织系统中流的规模分布（Size distribution，e.g., earthquake,financial markets,landscape formation;forest fires;landslides;epidemics; andbiological evolution）和流的持续时间分布（Duration distribution）都满足幂律的关系。 有趣的是我在新浪微博的扩散的研究中印证了扩散规模（diffusion range or cascade size）的幂律分布，这暗示着新浪微博中的信息扩散是连续的，同样的规律也存在于twitter中。&lt;/p&gt;

&lt;p&gt;Bak曾说自己对自组织临界性的理解是压力和压力的释放。比如向沙堆上加沙子，这种动力推动系统重新演化到平衡状态。这种释放压力的系统被称为耗散系统（dissipative system。这是一个很好的概念和视角：其实森林火、地震、河流涌动，信息传播，树叶中的营养输送，等可以以之概括。&lt;/p&gt;

&lt;p&gt;自组织临界可以按照平均场方法进行解析式的理解。平均场方法首先要确定的是phase transition的问题。第一步，便是要有一个稳定的pattern作为起点。因为相变是由一个序转变为另外一个序。而用来标识这种转变的变量称之为“相变序参量” （sigma），一个相到另一个相的转变需要一个驱动，而这个驱动变量即称为“相变驱动参量。比如铁磁相变中：
sigma=（t-tc)^r
这种标度律的稳定的关系吸引着科学家的注意力。 平均场方法认为跨越一切尺度的个体的相互作用结果的总体效果（即”平均场&amp;rdquo;），而不简单的是每个个体的局部信息（local information），决定着相变。&lt;/p&gt;

&lt;p&gt;##结尾
It puzzles me that geophysicists show little interest in underlying principles of their science. Perhaps they take it for granted that the earth is so complicated and messy that no general principles apply.
                                                  ——Bak， How nature works&lt;/p&gt;

&lt;p&gt;本文开始引用了Bak在其书中的一句戏谑地理学研究的一句话。其实地理科学家们当中也有一些有先见者。比如hack’s law揭示的流的直径和覆盖面积之间的标度关系。 用C来表示单位时间的平均流，A表示网络覆盖面积，之间也满足标度关系关系。&lt;/p&gt;

&lt;p&gt;相反，这句话是留给社会科学家（不是哲学家或价值批判研究者）的，对于网络科学所刻画的可计算性的传播行为的研究，在通往可计算性传播学研究的道路上，只有实在性是最好的没得。不能停留在表面，必须深入到简单的相下面的基本规律中去。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
