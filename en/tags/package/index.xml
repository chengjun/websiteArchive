<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Package on </title>
    <link>https://chengjun.github.io/en/tags/package/index.xml</link>
    <description>Recent content in Package on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Cheng-Jun Wang</copyright>
    <atom:link href="/en/tags/package/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>打包发布python软件包</title>
      <link>https://chengjun.github.io/en/post/cn/2015-02-22-distribute-python-package/</link>
      <pubDate>Sun, 22 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://chengjun.github.io/en/post/cn/2015-02-22-distribute-python-package/</guid>
      <description>&lt;p&gt;我们经常写一些程序碎片，却很少有动力把它们整合起来。前段时间写了一个爬取并可视化谷歌学术网的python程序。今天想不如把它整合一下，虽然非常简单（只有一个函数）。主要参考python官网的&lt;a href=&#34;https://packaging.python.org/en/latest/distributing.html#uploading-your-project-to-pypi&#34; target=&#34;_blank&#34;&gt;发布指南&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;##注册
于是首先来到pypi网站注册。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi?%3Aaction=submit_form&#34; target=&#34;_blank&#34;&gt;https://pypi.python.org/pypi?%3Aaction=submit_form&lt;/a&gt;
记下用户名chengjun和密码W4&lt;/p&gt;

&lt;p&gt;##填写软件包信息
《指南》推荐直接在线填写 &lt;a href=&#34;https://pypi.python.org/pypi?%3Aaction=submit_form&#34; target=&#34;_blank&#34;&gt;https://pypi.python.org/pypi?%3Aaction=submit_form&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;##打包和发布工具
先要安装两个包：twine和wheel。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install wheel
pip install twine
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##整理项目文件夹
找项目实例（&lt;a href=&#34;https://github.com/pypa/sampleproject）下载下来，修改其中的部分内容即可。详见指南，或者自己摸索即可。&#34; target=&#34;_blank&#34;&gt;https://github.com/pypa/sampleproject）下载下来，修改其中的部分内容即可。详见指南，或者自己摸索即可。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;##打包发布
1.在window环境下，使用cmd，转换工作路径到项目文件夹。
2. 主要参考 &lt;a href=&#34;https://github.com/pypa/twine打包发布：&#34; target=&#34;_blank&#34;&gt;https://github.com/pypa/twine打包发布：&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#Create some distributions in the normal way:
$ python setup.py sdist bdist_wheel

#Upload with twine:
$ twine upload dist/*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我使用上传的时候出错（typeError），于是直接使用打包好的zip文件（在dist子文件夹当中）手工上传到pypi。注意，每次上传到pypi需要修改一次setup.py中的版本号，并重新打包才可上传。如此而已，比我想象当中要速度快得多、简单的多。&lt;/p&gt;

&lt;p&gt;这里是我刚刚打包发布的一个可视化谷歌学术网络的python软件包：&lt;a href=&#34;https://pypi.python.org/pypi/scholarNetwork/&#34; target=&#34;_blank&#34;&gt;https://pypi.python.org/pypi/scholarNetwork/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>scholarNetwork: Visualizing Google Scholar Network</title>
      <link>https://chengjun.github.io/en/post/en/2015-02-22-scholarNetwork/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chengjun.github.io/en/post/en/2015-02-22-scholarNetwork/</guid>
      <description>

&lt;p&gt;#scholarNetwork&lt;/p&gt;

&lt;p&gt;Developed by Cheng-Jun Wang &amp;amp; Lingfei Wu&lt;/p&gt;

&lt;p&gt;Cheng-Jun Wang wangchj04@gmail.com
Lingfei Wu wlf850927@gmail.com&lt;/p&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;scholarNetwork is a python package for crawling and visualizing the co-author network of Google Scholar.&lt;/p&gt;

&lt;p&gt;To use it, you must have access to Google Scholar, and you would also install beautifulsoup4 and networkx during the installation process.&lt;/p&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;Install from pypi using pip or easy_install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;     pip install scholarNetwork
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;     easy_install scholarNetwork
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##Use&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    from scholarNetwork import scholarNetwork
    import matplotlib.pyplot as plt
    import networkx as nx

    ## The seed of crawler
    seed = &#39;https://scholar.google.nl/citations?user=nNdt_G8AAAAJ&amp;amp;hl=en&amp;amp;oe=ASCII&#39;
    ## How many nodes do you want to visulize? Always start with a small one.
    Nmax = 21
    ## Get the graph g
    g = scholarNetwork.getGraph(seed, Nmax)

    ## plot the network
    pos=nx.spring_layout(g) #setup the layout

    nx.draw(g, pos, node_shape = &#39;o&#39;,
            edge_color = &#39;gray&#39;, width = 0.5,
            with_labels = True, arrows = True)
    plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://chengjun.qiniudn.com/example.png&#34; alt=&#34;1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Of course, you can get a much larger graph to see what&amp;rsquo;s happening around you, just to change the value of Nmax. However, you have to be patient to wait for much longer time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://chengjun.qiniudn.com/ego300large.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
