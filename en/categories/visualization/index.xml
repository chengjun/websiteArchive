<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualization on </title>
    <link>https://chengjun.github.io/en/categories/visualization/index.xml</link>
    <description>Recent content in Visualization on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Cheng-Jun Wang</copyright>
    <atom:link href="/en/categories/visualization/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Social Entrepreneurs Worldwide: Visualization using WebGL Globe</title>
      <link>https://chengjun.github.io/en/post/en/2014-08-20-ashoka-fellows-worldwide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chengjun.github.io/en/post/en/2014-08-20-ashoka-fellows-worldwide/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://chengjun.qiniudn.com/ashoka-globe.PNG&#34; alt=&#34;&#34; /&gt;
View it here &lt;a href=&#34;http://chengjun.github.io/globe/ashoka.html&#34; target=&#34;_blank&#34;&gt;http://chengjun.github.io/globe/ashoka.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Social Entrepreneurs Worldwide
&lt;code&gt;Ashoka is the largest network of social entrepreneurs worldwide. Ashoka Fellows are leading social entrepreneurs who we recognize to have innovative solutions to social problems and the potential to change patterns across society. They demonstrate unrivaled commitment to bold new ideas and prove that compassion, creativity, and collaboration are tremendous forces for change. Ashoka Fellows work in over 70 countries around the globe in every area of human need.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In this post, I would try to visualize its global distributions using &lt;a href=&#34;http://www.chromeexperiments.com/globe&#34; target=&#34;_blank&#34;&gt;WebGL Globe&lt;/a&gt;. &lt;code&gt;The WebGL Globe is an open platform for geographic data visualization.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####Data Cleaning
First, I get the country frequency using the following R script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  dat2 = read.csv(&amp;quot;D:/Dropbox/Crystal_RA_Job/Ashoka Project/data/ashoka/ashoka_data_cleaningSep.csv&amp;quot;,
                 header = F, sep = &amp;quot;|&amp;quot;, quote = &amp;quot;&amp;quot;, stringsAsFactors=F); dim(dat2)

  names(dat2) =  c(&#39;name&#39;, &#39;category&#39;, &#39;subsectors&#39;, &#39;targets&#39;, &#39;organization&#39;, &#39;location1&#39;,
                &#39;location2&#39;, &#39;profileIntro&#39;, &#39;year_fellowship&#39;, &#39;introduction&#39;, &#39;idea&#39;,
                &#39;problem&#39;, &#39;strategy&#39;, &#39;person&#39;, &#39;rnames&#39;, &#39;rorgs&#39;)    

  # country
  country = NULL
  for (i in 1:length(dat2$name)){
    country[[i]] = gsub( &amp;quot;, &amp;quot;, &amp;quot;&amp;quot;, dat2$location1[i], fixed = T)
  }


  ids = which(nchar(country) &amp;gt; 30)
  for (i in ids){
    cat(dat2$name[i], country[i], &#39;\n&#39;)
  }

  country[ids] = c(&#39;United States&#39;, &#39;Belgium&#39;, &#39;Czech Republic&#39;, &#39;Paraguay&#39;)

  data = data.frame(table(country))
  write.table(data, &#39;D:/Dropbox/Crystal_RA_Job/Ashoka Project/data/ashoka/ashoka_country.csv&#39;, sep = &#39;\t&#39;, row.names = FALSE, col.names = FALSE, quote = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Second, we can get the geolocation coordinates using Google&amp;rsquo;s Geo API. In this post, I use the pygeocoder module of Python to fetch the geo information for countries.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; from pygeocoder import Geocoder
 import time
 import os

 # change work directory
 os.chdir(&#39;D:/Dropbox/Crystal_RA_Job/Ashoka Project/data/ashoka/&#39;)

 # read country data
 with open(&#39;./ashoka_country.csv&#39;) as f:
     location = {}
     for line in f:
         country, freq = line.strip().split(&#39;\t&#39;)
         location[country] = int(freq)

 maxFreq = max(location.values())    

 #get geo coordinates
 results = []    
 for i in location.keys():
     time.sleep(1)
     latitude, longtitude = Geocoder.geocode(i)[0].coordinates
     results.extend([latitude, longtitude, location[i]/maxFreq])

 # make json
 data = [[&amp;quot;data&amp;quot;,results]]

 # save json
 import json
 with open(&#39;./ashoka_locations.json&#39;, &#39;w&#39;) as outfile:
   json.dump(data, outfile)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;####visualization
In this visualization, each pillar stands for one country. By the year of 2013, there are 2334 fellows from 76 countries. The top 3 countries are India (N = 303), Brazil (N = 286), and United States(N = 160).&lt;/p&gt;

&lt;p&gt;Using python, we can sort the country frequency like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  sorted(location.items(), key=lambda x: x[1])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here is the result:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; #[(&#39;Italy&#39;, 1), (&#39;Netherlands&#39;, 1), (&#39;Iceland&#39;, 1), (&#39;Togo&#39;, 1), (&#39;Saudi Arabia&#39;, 1),
 # (&#39;Latvia&#39;, 1), (&#39;Guinea-Bissau&#39;, 1), (&#39;Mozambique&#39;, 1), (&#39;Niger&#39;, 1), (&#39;Botswana&#39;, 1),
 #(&#39;Hong Kong S.A.R.China&#39;, 1), (&#39;Norway&#39;, 2), (&#39;Singapore&#39;, 2), (&#39;Denmark&#39;, 2),
 #(&#39;Morocco&#39;, 2), (&#39;Japan&#39;, 2), (&#39;Timor-Leste&#39;, 2), (&#39;Austria&#39;, 2), (&#39;Zambia&#39;, 2),
 # (&#39;Afghanistan&#39;, 3), (&#39;Sweden&#39;, 3), (&#39;Nicaragua&#39;, 3), (&#39;Cameroon&#39;, 4),
 #(&#39;Ivory Coast&#39;, 4), (&#39;Lebanon&#39;, 5), (&#39;Ghana&#39;, 5), (&#39;Israel&#39;, 5), (&#39;Guatemala&#39;, 5),
 # (&#39;Belgium&#39;, 5), (&#39;Switzerland&#39;, 5), (&#39;El Salvador&#39;, 6), (&#39;Gambia&#39;, 6),
 #(&#39;Tanzania&#39;, 6), (&#39;Lithuania&#39;, 7), (&#39;Palestinian Territory&#39;, 7), (&#39;Jordan&#39;, 8),
 # (&#39;Costa Rica&#39;, 10), (&#39;Ireland&#39;, 10), (&#39;Mali&#39;, 13), (&#39;United Kingdom&#39;, 13),
 #(&#39;Zimbabwe&#39;, 13), (&#39;Venezuela&#39;, 15), (&#39;Paraguay&#39;, 16), (&#39;Slovakia&#39;, 18),
 #(&#39;Sri Lanka&#39;, 18), (&#39;Senegal&#39;, 20), (&#39;Uganda&#39;, 20), (&#39;Uruguay&#39;, 20),
 # (&#39;Bolivia&#39;, 23), (&#39;Kenya&#39;, 24), (&#39;Turkey&#39;, 24), (&#39;Spain&#39;, 25), (&#39;Czech Republic&#39;, 26),
 # (&#39;Hungary&#39;, 27), (&#39;Burkina Faso&#39;, 28), (&#39;Ecuador&#39;, 31), (&#39;France&#39;, 33), (&#39;Peru&#39;, 36),
 # (&#39;Canada&#39;, 40), (&#39;Germany&#39;, 40), (&#39;Egypt&#39;, 40), (&#39;Chile&#39;, 41), (&#39;Nepal&#39;, 41),
 #(&#39;Pakistan&#39;, 45), (&#39;Colombia&#39;, 50), (&#39;Argentina&#39;, 53), (&#39;Bangladesh&#39;, 61),
 #(&#39;Poland&#39;, 69), (&#39;Nigeria&#39;, 70), (&#39;Thailand&#39;, 88), (&#39;South Africa&#39;, 94),
 #(&#39;Indonesia&#39;, 123), (&#39;Mexico&#39;, 153), (&#39;United States&#39;, 160), (&#39;Brazil&#39;, 286), (&#39;India&#39;, 303)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;iframe src=&#39;http://chengjun.github.io/globe/ashoka.html&#39; scrolling=&#34;no&#34; width=&#34;800&#34; height = &#34;600&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
